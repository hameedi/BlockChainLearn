{
	"id": "9a081c41546bfeb3adf408017f734a23",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.17",
	"solcLongVersion": "0.4.17+commit.bdeb9e52",
	"input": {
		"language": "Solidity",
		"sources": {
			"Learn/Auction.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\ncontract Auction {\n    struct Person {\n        uint256 personId;\n        address addr;\n        uint256 remainingTokens;\n    }\n\n    struct Item {\n        uint256 itemId;\n        uint256 tokens;\n    }\n\n    enum Stage {\n        Init,\n        Reg,\n        Bid,\n        Done\n    }\n\n    mapping(address => Person) public people;\n    mapping(address => Item) public items;\n    Stage stage;\n    address organizer;\n\n    modifier hasTokens(address bidder) {\n        require(people[bidder].remainingTokens > 0);\n        _;\n    }\n\n    modifier validStage(Stage _stage) {\n        require(stage == _stage);\n        _;\n    }\n\n    function Auction() public {\n        stage = Stage.Init;\n        createPerson(1, 0x8438332974105367073911348732759344745833, 5);\n        createPerson(2, 0x8438332974105367073911348732759344745, 5);\n    }\n\n    function createPerson(\n        uint256 personId,\n        address addr,\n        uint256 remainingTokens\n    ) public {\n        Person memory p = Person(personId, addr, remainingTokens);\n        people[addr] = p;\n    }\n\n    function ProceedToNextStage() public {\n        if (stage == Stage.Init) {\n            stage = Stage.Reg;\n            return;\n        }\n        if (stage == Stage.Reg) {\n            stage = Stage.Bid;\n            return;\n        }\n        if (stage == Stage.Bid) {\n            stage = Stage.Done;\n            return;\n        }\n    }\n\n    function register(address bidder)\n        public\n        validStage(Stage.Reg)\n        hasTokens(bidder)\n    {\n        people[bidder].remainingTokens -= 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Learn/Auction.sol": {
				"Auction": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "people",
							"outputs": [
								{
									"name": "personId",
									"type": "uint256"
								},
								{
									"name": "addr",
									"type": "address"
								},
								{
									"name": "remainingTokens",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "bidder",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "ProceedToNextStage",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "personId",
									"type": "uint256"
								},
								{
									"name": "addr",
									"type": "address"
								},
								{
									"name": "remainingTokens",
									"type": "uint256"
								}
							],
							"name": "createPerson",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "items",
							"outputs": [
								{
									"name": "itemId",
									"type": "uint256"
								},
								{
									"name": "tokens",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Learn/Auction.sol\":58:1603  contract Auction {... */\n  mstore(0x40, 0x60)\n    /* \"Learn/Auction.sol\":673:875  function Auction() public {... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"Learn/Auction.sol\":717:727  Stage.Init */\n  0x0\n    /* \"Learn/Auction.sol\":709:714  stage */\n  0x2\n  0x0\n    /* \"Learn/Auction.sol\":709:727  stage = Stage.Init */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x3\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  invalid\ntag_4:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Learn/Auction.sol\":737:799  createPerson(1, 0x8438332974105367073911348732759344745833, 5) */\n  tag_5\n    /* \"Learn/Auction.sol\":750:751  1 */\n  0x1\n    /* \"Learn/Auction.sol\":753:795  0x8438332974105367073911348732759344745833 */\n  0x8438332974105367073911348732759344745833\n    /* \"Learn/Auction.sol\":797:798  5 */\n  0x5\n    /* \"Learn/Auction.sol\":737:749  createPerson */\n  or(tag_0_18, mul(0x100000000, tag_6))\n    /* \"Learn/Auction.sol\":737:799  createPerson(1, 0x8438332974105367073911348732759344745833, 5) */\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_5:\n    /* \"Learn/Auction.sol\":809:868  createPerson(2, 0x8438332974105367073911348732759344745, 5) */\n  tag_7\n    /* \"Learn/Auction.sol\":822:823  2 */\n  0x2\n    /* \"Learn/Auction.sol\":825:864  0x8438332974105367073911348732759344745 */\n  0x8438332974105367073911348732759344745\n    /* \"Learn/Auction.sol\":866:867  5 */\n  0x5\n    /* \"Learn/Auction.sol\":809:821  createPerson */\n  or(tag_0_18, mul(0x100000000, tag_6))\n    /* \"Learn/Auction.sol\":809:868  createPerson(2, 0x8438332974105367073911348732759344745, 5) */\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_7:\n    /* \"Learn/Auction.sol\":58:1603  contract Auction {... */\n  jump(tag_8)\n    /* \"Learn/Auction.sol\":881:1097  function createPerson(... */\ntag_6:\n    /* \"Learn/Auction.sol\":1007:1022  Person memory p */\n  tag_9\n  jump\t// in(tag_10)\ntag_9:\n    /* \"Learn/Auction.sol\":1025:1064  Person(personId, addr, remainingTokens) */\n  0x60\n  mload(0x40)\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Learn/Auction.sol\":1032:1040  personId */\n  dup6\n    /* \"Learn/Auction.sol\":1025:1064  Person(personId, addr, remainingTokens) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Learn/Auction.sol\":1042:1046  addr */\n  dup5\n    /* \"Learn/Auction.sol\":1025:1064  Person(personId, addr, remainingTokens) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Learn/Auction.sol\":1048:1063  remainingTokens */\n  dup4\n    /* \"Learn/Auction.sol\":1025:1064  Person(personId, addr, remainingTokens) */\n  dup2\n  mstore\n  pop\n    /* \"Learn/Auction.sol\":1007:1064  Person memory p = Person(personId, addr, remainingTokens) */\n  swap1\n  pop\n    /* \"Learn/Auction.sol\":1089:1090  p */\n  dup1\n    /* \"Learn/Auction.sol\":1074:1080  people */\n  0x0\n    /* \"Learn/Auction.sol\":1074:1086  people[addr] */\n  dup1\n    /* \"Learn/Auction.sol\":1081:1085  addr */\n  dup6\n    /* \"Learn/Auction.sol\":1074:1086  people[addr] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"Learn/Auction.sol\":1074:1090  people[addr] = p */\n  0x0\n  dup3\n  add\n  mload\n  dup2\n  0x0\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x1\n  add\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x2\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"Learn/Auction.sol\":881:1097  function createPerson(... */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"Learn/Auction.sol\":58:1603  contract Auction {... */\ntag_10:\n  0x60\n  mload(0x40)\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0x0\n  dup2\n  mstore\n  0x20\n  add\n  and(0xffffffffffffffffffffffffffffffffffffffff, 0x0)\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  dup2\n  mstore\n  pop\n  swap1\n  jump\t// out\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Learn/Auction.sol\":58:1603  contract Auction {... */\n      mstore(0x40, 0x60)\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x7de9735\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4420e486\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x525083cc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5d59fc6c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd321411c\n      eq\n      tag_6\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"Learn/Auction.sol\":339:379  mapping(address => Person) public people */\n    tag_2:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_9)\n    tag_8:\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Learn/Auction.sol\":1440:1601  function register(address bidder)... */\n    tag_3:\n      jumpi(tag_10, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_10:\n      tag_11\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_12)\n    tag_11:\n      stop\n        /* \"Learn/Auction.sol\":1103:1434  function ProceedToNextStage() public {... */\n    tag_4:\n      jumpi(tag_13, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_13:\n      tag_14\n      jump(tag_15)\n    tag_14:\n      stop\n        /* \"Learn/Auction.sol\":881:1097  function createPerson(... */\n    tag_5:\n      jumpi(tag_16, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_16:\n      tag_17\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_18)\n    tag_17:\n      stop\n        /* \"Learn/Auction.sol\":385:422  mapping(address => Item) public items */\n    tag_6:\n      jumpi(tag_19, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_19:\n      tag_20\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_21)\n    tag_20:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Learn/Auction.sol\":339:379  mapping(address => Person) public people */\n    tag_9:\n      mstore(0x20, 0x0)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x0\n      add\n      sload\n      swap1\n      dup1\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x2\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"Learn/Auction.sol\":1440:1601  function register(address bidder)... */\n    tag_12:\n        /* \"Learn/Auction.sol\":1508:1517  Stage.Reg */\n      0x1\n        /* \"Learn/Auction.sol\":642:648  _stage */\n      dup1\n        /* \"Learn/Auction.sol\":633:648  stage == _stage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_23\n      jumpi\n      invalid\n    tag_23:\n        /* \"Learn/Auction.sol\":633:638  stage */\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learn/Auction.sol\":633:648  stage == _stage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n      eq\n        /* \"Learn/Auction.sol\":625:649  require(stage == _stage) */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_25:\n        /* \"Learn/Auction.sol\":1537:1543  bidder */\n      dup2\n        /* \"Learn/Auction.sol\":555:556  0 */\n      0x0\n        /* \"Learn/Auction.sol\":522:528  people */\n      dup1\n        /* \"Learn/Auction.sol\":522:536  people[bidder] */\n      0x0\n        /* \"Learn/Auction.sol\":529:535  bidder */\n      dup4\n        /* \"Learn/Auction.sol\":522:536  people[bidder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Learn/Auction.sol\":522:552  people[bidder].remainingTokens */\n      0x2\n      add\n      sload\n        /* \"Learn/Auction.sol\":522:556  people[bidder].remainingTokens > 0 */\n      gt\n        /* \"Learn/Auction.sol\":514:557  require(people[bidder].remainingTokens > 0) */\n      iszero\n      iszero\n      tag_27\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_27:\n        /* \"Learn/Auction.sol\":1593:1594  1 */\n      0x1\n        /* \"Learn/Auction.sol\":1559:1565  people */\n      0x0\n        /* \"Learn/Auction.sol\":1559:1573  people[bidder] */\n      dup1\n        /* \"Learn/Auction.sol\":1566:1572  bidder */\n      dup6\n        /* \"Learn/Auction.sol\":1559:1573  people[bidder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Learn/Auction.sol\":1559:1589  people[bidder].remainingTokens */\n      0x2\n      add\n      0x0\n        /* \"Learn/Auction.sol\":1559:1594  people[bidder].remainingTokens -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Learn/Auction.sol\":659:660  _ */\n      pop\n        /* \"Learn/Auction.sol\":1440:1601  function register(address bidder)... */\n      pop\n      pop\n      jump\t// out\n        /* \"Learn/Auction.sol\":1103:1434  function ProceedToNextStage() public {... */\n    tag_15:\n        /* \"Learn/Auction.sol\":1163:1173  Stage.Init */\n      0x0\n        /* \"Learn/Auction.sol\":1154:1173  stage == Stage.Init */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n        /* \"Learn/Auction.sol\":1154:1159  stage */\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learn/Auction.sol\":1154:1173  stage == Stage.Init */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_31\n      jumpi\n      invalid\n    tag_31:\n      eq\n        /* \"Learn/Auction.sol\":1150:1237  if (stage == Stage.Init) {... */\n      iszero\n      tag_32\n      jumpi\n        /* \"Learn/Auction.sol\":1197:1206  Stage.Reg */\n      0x1\n        /* \"Learn/Auction.sol\":1189:1194  stage */\n      0x2\n      0x0\n        /* \"Learn/Auction.sol\":1189:1206  stage = Stage.Reg */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_33\n      jumpi\n      invalid\n    tag_33:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learn/Auction.sol\":1220:1227  return; */\n      jump(tag_29)\n        /* \"Learn/Auction.sol\":1150:1237  if (stage == Stage.Init) {... */\n    tag_32:\n        /* \"Learn/Auction.sol\":1259:1268  Stage.Reg */\n      0x1\n        /* \"Learn/Auction.sol\":1250:1268  stage == Stage.Reg */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_34\n      jumpi\n      invalid\n    tag_34:\n        /* \"Learn/Auction.sol\":1250:1255  stage */\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learn/Auction.sol\":1250:1268  stage == Stage.Reg */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_35\n      jumpi\n      invalid\n    tag_35:\n      eq\n        /* \"Learn/Auction.sol\":1246:1332  if (stage == Stage.Reg) {... */\n      iszero\n      tag_36\n      jumpi\n        /* \"Learn/Auction.sol\":1292:1301  Stage.Bid */\n      0x2\n        /* \"Learn/Auction.sol\":1284:1289  stage */\n      dup1\n      0x0\n        /* \"Learn/Auction.sol\":1284:1301  stage = Stage.Bid */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_37\n      jumpi\n      invalid\n    tag_37:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learn/Auction.sol\":1315:1322  return; */\n      jump(tag_29)\n        /* \"Learn/Auction.sol\":1246:1332  if (stage == Stage.Reg) {... */\n    tag_36:\n        /* \"Learn/Auction.sol\":1354:1363  Stage.Bid */\n      0x2\n        /* \"Learn/Auction.sol\":1345:1363  stage == Stage.Bid */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_38\n      jumpi\n      invalid\n    tag_38:\n        /* \"Learn/Auction.sol\":1345:1350  stage */\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learn/Auction.sol\":1345:1363  stage == Stage.Bid */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n      eq\n        /* \"Learn/Auction.sol\":1341:1428  if (stage == Stage.Bid) {... */\n      iszero\n      tag_40\n      jumpi\n        /* \"Learn/Auction.sol\":1387:1397  Stage.Done */\n      0x3\n        /* \"Learn/Auction.sol\":1379:1384  stage */\n      0x2\n      0x0\n        /* \"Learn/Auction.sol\":1379:1397  stage = Stage.Done */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_41\n      jumpi\n      invalid\n    tag_41:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learn/Auction.sol\":1411:1418  return; */\n      jump(tag_29)\n        /* \"Learn/Auction.sol\":1341:1428  if (stage == Stage.Bid) {... */\n    tag_40:\n        /* \"Learn/Auction.sol\":1103:1434  function ProceedToNextStage() public {... */\n    tag_29:\n      jump\t// out\n        /* \"Learn/Auction.sol\":881:1097  function createPerson(... */\n    tag_18:\n        /* \"Learn/Auction.sol\":1007:1022  Person memory p */\n      tag_42\n      jump\t// in(tag_43)\n    tag_42:\n        /* \"Learn/Auction.sol\":1025:1064  Person(personId, addr, remainingTokens) */\n      0x60\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Learn/Auction.sol\":1032:1040  personId */\n      dup6\n        /* \"Learn/Auction.sol\":1025:1064  Person(personId, addr, remainingTokens) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Learn/Auction.sol\":1042:1046  addr */\n      dup5\n        /* \"Learn/Auction.sol\":1025:1064  Person(personId, addr, remainingTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Learn/Auction.sol\":1048:1063  remainingTokens */\n      dup4\n        /* \"Learn/Auction.sol\":1025:1064  Person(personId, addr, remainingTokens) */\n      dup2\n      mstore\n      pop\n        /* \"Learn/Auction.sol\":1007:1064  Person memory p = Person(personId, addr, remainingTokens) */\n      swap1\n      pop\n        /* \"Learn/Auction.sol\":1089:1090  p */\n      dup1\n        /* \"Learn/Auction.sol\":1074:1080  people */\n      0x0\n        /* \"Learn/Auction.sol\":1074:1086  people[addr] */\n      dup1\n        /* \"Learn/Auction.sol\":1081:1085  addr */\n      dup6\n        /* \"Learn/Auction.sol\":1074:1086  people[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Learn/Auction.sol\":1074:1090  people[addr] = p */\n      0x0\n      dup3\n      add\n      mload\n      dup2\n      0x0\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x1\n      add\n      exp(0x100, 0x0)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x2\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"Learn/Auction.sol\":881:1097  function createPerson(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Learn/Auction.sol\":385:422  mapping(address => Item) public items */\n    tag_21:\n      mstore(0x20, 0x1)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x0\n      add\n      sload\n      swap1\n      dup1\n      0x1\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"Learn/Auction.sol\":58:1603  contract Auction {... */\n    tag_43:\n      0x60\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x0)\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820ae5643b9f3c3f1eb30c1ff3435531dbdb92cb08b22d49a3ed6b45b993cfa82e70029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6060604052341561000f57600080fd5b6000600260006101000a81548160ff0219169083600381111561002e57fe5b02179055506100676001738438332974105367073911348732759344745833600561009f64010000000002610409176401000000009004565b61009a60027208438332974105367073911348732759344745600561009f64010000000002610409176401000000009004565b6101b6565b6100a761017e565b6060604051908101604052808581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152509050806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015590505050505050565b60606040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b610570806101c56000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307de9735146100695780634420e486146100f0578063525083cc146101295780635d59fc6c1461013e578063d321411c1461018957600080fd5b341561007457600080fd5b6100a0600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101dd565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b34156100fb57600080fd5b610127600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610227565b005b341561013457600080fd5b61013c610302565b005b341561014957600080fd5b610187600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610409565b005b341561019457600080fd5b6101c0600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506104e8565b604051808381526020018281526020019250505060405180910390f35b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b600180600381111561023557fe5b600260009054906101000a900460ff16600381111561025057fe5b14151561025c57600080fd5b8160008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201541115156102ad57600080fd5b60016000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282540392505081905550505050565b6000600381111561030f57fe5b600260009054906101000a900460ff16600381111561032a57fe5b1415610359576001600260006101000a81548160ff0219169083600381111561034f57fe5b0217905550610407565b6001600381111561036657fe5b600260009054906101000a900460ff16600381111561038157fe5b14156103af5760028060006101000a81548160ff021916908360038111156103a557fe5b0217905550610407565b600260038111156103bc57fe5b600260009054906101000a900460ff1660038111156103d757fe5b1415610406576003600260006101000a81548160ff021916908360038111156103fc57fe5b0217905550610407565b5b565b61041161050c565b6060604051908101604052808581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152509050806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015590505050505050565b60016020528060005260406000206000915090508060000154908060010154905082565b60606040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815250905600a165627a7a72305820ae5643b9f3c3f1eb30c1ff3435531dbdb92cb08b22d49a3ed6b45b993cfa82e70029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x67 PUSH1 0x1 PUSH20 0x8438332974105367073911348732759344745833 PUSH1 0x5 PUSH2 0x9F PUSH5 0x100000000 MUL PUSH2 0x409 OR PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH2 0x9A PUSH1 0x2 PUSH19 0x8438332974105367073911348732759344745 PUSH1 0x5 PUSH2 0x9F PUSH5 0x100000000 MUL PUSH2 0x409 OR PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH2 0x1B6 JUMP JUMPDEST PUSH2 0xA7 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x570 DUP1 PUSH2 0x1C5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x7DE9735 EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x525083CC EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x5D59FC6C EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xD321411C EQ PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x227 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13C PUSH2 0x302 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x409 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x235 JUMPI INVALID JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x250 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD GT ISZERO ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x30F JUMPI INVALID JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x32A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x359 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x34F JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x407 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x366 JUMPI INVALID JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x381 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3AF JUMPI PUSH1 0x2 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3A5 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x407 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3BC JUMPI INVALID JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3D7 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x406 JUMPI PUSH1 0x3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3FC JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x407 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH2 0x411 PUSH2 0x50C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xae JUMP NUMBER 0xb9 RETURN 0xc3 CALL 0xeb ADDRESS 0xc1 SELFDESTRUCT CALLVALUE CALLDATALOAD MSTORE8 0x1d 0xbd 0xb9 0x2c 0xb0 DUP12 0x22 0xd4 SWAP11 RETURNDATACOPY 0xd6 0xb4 JUMPDEST SWAP10 EXTCODECOPY STATICCALL DUP3 0xe7 STOP 0x29 ",
							"sourceMap": "58:1545:0:-;;;673:202;;;;;;;;717:10;709:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;737:62;750:1;753:42;797:1;737:12;;;;;:62;;;:::i;:::-;809:59;822:1;825:39;866:1;809:12;;;;;:59;;;:::i;:::-;58:1545;;881:216;1007:15;;:::i;:::-;1025:39;;;;;;;;;1032:8;1025:39;;;;1042:4;1025:39;;;;;;1048:15;1025:39;;;1007:57;;1089:1;1074:6;:12;1081:4;1074:12;;;;;;;;;;;;;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;881:216;;;;:::o;58:1545::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307de9735146100695780634420e486146100f0578063525083cc146101295780635d59fc6c1461013e578063d321411c1461018957600080fd5b341561007457600080fd5b6100a0600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101dd565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b34156100fb57600080fd5b610127600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610227565b005b341561013457600080fd5b61013c610302565b005b341561014957600080fd5b610187600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610409565b005b341561019457600080fd5b6101c0600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506104e8565b604051808381526020018281526020019250505060405180910390f35b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b600180600381111561023557fe5b600260009054906101000a900460ff16600381111561025057fe5b14151561025c57600080fd5b8160008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201541115156102ad57600080fd5b60016000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282540392505081905550505050565b6000600381111561030f57fe5b600260009054906101000a900460ff16600381111561032a57fe5b1415610359576001600260006101000a81548160ff0219169083600381111561034f57fe5b0217905550610407565b6001600381111561036657fe5b600260009054906101000a900460ff16600381111561038157fe5b14156103af5760028060006101000a81548160ff021916908360038111156103a557fe5b0217905550610407565b600260038111156103bc57fe5b600260009054906101000a900460ff1660038111156103d757fe5b1415610406576003600260006101000a81548160ff021916908360038111156103fc57fe5b0217905550610407565b5b565b61041161050c565b6060604051908101604052808581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152509050806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015590505050505050565b60016020528060005260406000206000915090508060000154908060010154905082565b60606040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815250905600a165627a7a72305820ae5643b9f3c3f1eb30c1ff3435531dbdb92cb08b22d49a3ed6b45b993cfa82e70029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x7DE9735 EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x525083CC EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x5D59FC6C EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xD321411C EQ PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x227 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13C PUSH2 0x302 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x409 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x235 JUMPI INVALID JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x250 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD GT ISZERO ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x30F JUMPI INVALID JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x32A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x359 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x34F JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x407 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x366 JUMPI INVALID JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x381 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3AF JUMPI PUSH1 0x2 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3A5 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x407 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3BC JUMPI INVALID JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3D7 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x406 JUMPI PUSH1 0x3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3FC JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x407 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH2 0x411 PUSH2 0x50C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xae JUMP NUMBER 0xb9 RETURN 0xc3 CALL 0xeb ADDRESS 0xc1 SELFDESTRUCT CALLVALUE CALLDATALOAD MSTORE8 0x1d 0xbd 0xb9 0x2c 0xb0 DUP12 0x22 0xd4 SWAP11 RETURNDATACOPY 0xd6 0xb4 JUMPDEST SWAP10 EXTCODECOPY STATICCALL DUP3 0xe7 STOP 0x29 ",
							"sourceMap": "58:1545:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1440:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:331;;;;;;;;;;;;;;881:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;385:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1440:161::-;1508:9;642:6;633:15;;;;;;;;:5;;;;;;;;;;;:15;;;;;;;;;625:24;;;;;;;;1537:6;555:1;522:6;:14;529:6;522:14;;;;;;;;;;;;;;;:30;;;:34;514:43;;;;;;;;1593:1;1559:6;:14;1566:6;1559:14;;;;;;;;;;;;;;;:30;;;:35;;;;;;;;;;;659:1;1440:161;;:::o;1103:331::-;1163:10;1154:19;;;;;;;;:5;;;;;;;;;;;:19;;;;;;;;;1150:87;;;1197:9;1189:5;;:17;;;;;;;;;;;;;;;;;;;;;;;;1220:7;;1150:87;1259:9;1250:18;;;;;;;;:5;;;;;;;;;;;:18;;;;;;;;;1246:86;;;1292:9;1284:5;;:17;;;;;;;;;;;;;;;;;;;;;;;;1315:7;;1246:86;1354:9;1345:18;;;;;;;;:5;;;;;;;;;;;:18;;;;;;;;;1341:87;;;1387:10;1379:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1411:7;;1341:87;1103:331;:::o;881:216::-;1007:15;;:::i;:::-;1025:39;;;;;;;;;1032:8;1025:39;;;;1042:4;1025:39;;;;;;1048:15;1025:39;;;1007:57;;1089:1;1074:6;:12;1081:4;1074:12;;;;;;;;;;;;;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;881:216;;;;:::o;385:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;58:1545::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "278400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ProceedToNextStage()": "21391",
								"createPerson(uint256,address,uint256)": "60894",
								"items(address)": "815",
								"people(address)": "1007",
								"register(address)": "21152"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "MSTORE"
								},
								{
									"begin": 673,
									"end": 875,
									"name": "CALLVALUE"
								},
								{
									"begin": 673,
									"end": 875,
									"name": "ISZERO"
								},
								{
									"begin": 673,
									"end": 875,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 673,
									"end": 875,
									"name": "JUMPI"
								},
								{
									"begin": 673,
									"end": 875,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 673,
									"end": 875,
									"name": "DUP1"
								},
								{
									"begin": 673,
									"end": 875,
									"name": "REVERT"
								},
								{
									"begin": 673,
									"end": 875,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 673,
									"end": 875,
									"name": "JUMPDEST"
								},
								{
									"begin": 717,
									"end": 727,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 709,
									"end": 714,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 709,
									"end": 714,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "EXP"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "DUP2"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "SLOAD"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "DUP2"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "MUL"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "NOT"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "AND"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "SWAP1"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "DUP4"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "DUP2"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "GT"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "ISZERO"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "JUMPI"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "INVALID"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "JUMPDEST"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "MUL"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "OR"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "SWAP1"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "SSTORE"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "POP"
								},
								{
									"begin": 737,
									"end": 799,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 750,
									"end": 751,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 753,
									"end": 795,
									"name": "PUSH",
									"value": "8438332974105367073911348732759344745833"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 737,
									"end": 749,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 737,
									"end": 749,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 737,
									"end": 749,
									"name": "MUL"
								},
								{
									"begin": 737,
									"end": 749,
									"name": "PUSH [tag]",
									"value": "18446744073709551634"
								},
								{
									"begin": 737,
									"end": 749,
									"name": "OR"
								},
								{
									"begin": 737,
									"end": 799,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 737,
									"end": 799,
									"name": "SWAP1"
								},
								{
									"begin": 737,
									"end": 799,
									"name": "DIV"
								},
								{
									"begin": 737,
									"end": 799,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 737,
									"end": 799,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 737,
									"end": 799,
									"name": "JUMPDEST"
								},
								{
									"begin": 809,
									"end": 868,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 822,
									"end": 823,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 825,
									"end": 864,
									"name": "PUSH",
									"value": "8438332974105367073911348732759344745"
								},
								{
									"begin": 866,
									"end": 867,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 809,
									"end": 821,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 809,
									"end": 821,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 809,
									"end": 821,
									"name": "MUL"
								},
								{
									"begin": 809,
									"end": 821,
									"name": "PUSH [tag]",
									"value": "18446744073709551634"
								},
								{
									"begin": 809,
									"end": 821,
									"name": "OR"
								},
								{
									"begin": 809,
									"end": 868,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 809,
									"end": 868,
									"name": "SWAP1"
								},
								{
									"begin": 809,
									"end": 868,
									"name": "DIV"
								},
								{
									"begin": 809,
									"end": 868,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 809,
									"end": 868,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 809,
									"end": 868,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "JUMP"
								},
								{
									"begin": 881,
									"end": 1097,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 881,
									"end": 1097,
									"name": "JUMPDEST"
								},
								{
									"begin": 1007,
									"end": 1022,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 1007,
									"end": 1022,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 1007,
									"end": 1022,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1007,
									"end": 1022,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 1007,
									"end": 1022,
									"name": "JUMPDEST"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "MLOAD"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "SWAP1"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "DUP2"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "ADD"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "MSTORE"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "DUP1"
								},
								{
									"begin": 1032,
									"end": 1040,
									"name": "DUP6"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "DUP2"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "MSTORE"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "ADD"
								},
								{
									"begin": 1042,
									"end": 1046,
									"name": "DUP5"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "AND"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "DUP2"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "MSTORE"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "ADD"
								},
								{
									"begin": 1048,
									"end": 1063,
									"name": "DUP4"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "DUP2"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "MSTORE"
								},
								{
									"begin": 1025,
									"end": 1064,
									"name": "POP"
								},
								{
									"begin": 1007,
									"end": 1064,
									"name": "SWAP1"
								},
								{
									"begin": 1007,
									"end": 1064,
									"name": "POP"
								},
								{
									"begin": 1089,
									"end": 1090,
									"name": "DUP1"
								},
								{
									"begin": 1074,
									"end": 1080,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "DUP1"
								},
								{
									"begin": 1081,
									"end": 1085,
									"name": "DUP6"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "AND"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "AND"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "DUP2"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "MSTORE"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "ADD"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "SWAP1"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "DUP2"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "MSTORE"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "ADD"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1086,
									"name": "KECCAK256"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "DUP3"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "ADD"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "MLOAD"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "DUP2"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "ADD"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "SSTORE"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "DUP3"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "ADD"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "MLOAD"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "DUP2"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "ADD"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "EXP"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "DUP2"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "SLOAD"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "DUP2"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "MUL"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "NOT"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "AND"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "SWAP1"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "DUP4"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "AND"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "MUL"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "OR"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "SWAP1"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "SSTORE"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "POP"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "DUP3"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "ADD"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "MLOAD"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "DUP2"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "ADD"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "SSTORE"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "SWAP1"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "POP"
								},
								{
									"begin": 1074,
									"end": 1090,
									"name": "POP"
								},
								{
									"begin": 881,
									"end": 1097,
									"name": "POP"
								},
								{
									"begin": 881,
									"end": 1097,
									"name": "POP"
								},
								{
									"begin": 881,
									"end": 1097,
									"name": "POP"
								},
								{
									"begin": 881,
									"end": 1097,
									"name": "POP"
								},
								{
									"begin": 881,
									"end": 1097,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "MLOAD"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "MSTORE"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "MSTORE"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "AND"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "MSTORE"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "MSTORE"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "CODECOPY"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1603,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820ae5643b9f3c3f1eb30c1ff3435531dbdb92cb08b22d49a3ed6b45b993cfa82e70029",
									".code": [
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "MSTORE"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "DIV"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "AND"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "7DE9735"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "525083CC"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "5D59FC6C"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "D321411C"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "REVERT"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "CALLVALUE"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "ISZERO"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "REVERT"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "AND"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "ADD"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP2"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "JUMP"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "MLOAD"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP5"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "ADD"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP4"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "AND"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "AND"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "ADD"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP3"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "ADD"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP4"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "MLOAD"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP2"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SUB"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "RETURN"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "JUMPDEST"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "CALLVALUE"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "ISZERO"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "JUMPI"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "DUP1"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "REVERT"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "JUMPDEST"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "DUP1"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "DUP1"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "AND"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "SWAP1"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "ADD"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "SWAP1"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "SWAP2"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "SWAP1"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "POP"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "POP"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "JUMP"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "JUMPDEST"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "STOP"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "CALLVALUE"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "ISZERO"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "JUMPI"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "DUP1"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "REVERT"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "JUMP"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "STOP"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "JUMPDEST"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "CALLVALUE"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "ISZERO"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "JUMPI"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "REVERT"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "JUMPDEST"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "SWAP2"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "AND"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "SWAP2"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "SWAP2"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "JUMP"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "JUMPDEST"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "STOP"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "JUMPDEST"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "CALLVALUE"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "ISZERO"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "JUMPI"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "REVERT"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "JUMPDEST"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "AND"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "ADD"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SWAP2"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "JUMP"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "JUMPDEST"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "MLOAD"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "DUP4"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "DUP2"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "MSTORE"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "ADD"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "DUP3"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "DUP2"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "MSTORE"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "ADD"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SWAP3"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "MLOAD"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SWAP2"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SUB"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "RETURN"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "KECCAK256"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP2"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "ADD"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SLOAD"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "ADD"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SLOAD"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "EXP"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DIV"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "AND"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "ADD"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SLOAD"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP4"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "JUMPDEST"
										},
										{
											"begin": 1508,
											"end": 1517,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 642,
											"end": 648,
											"name": "DUP1"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "DUP2"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "GT"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "ISZERO"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "JUMPI"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "INVALID"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "JUMPDEST"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "SWAP1"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "SLOAD"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "SWAP1"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "EXP"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "SWAP1"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "DIV"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "AND"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "DUP2"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "GT"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "ISZERO"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "JUMPI"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "INVALID"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "JUMPDEST"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "EQ"
										},
										{
											"begin": 625,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 625,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 625,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 625,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 625,
											"end": 649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 625,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 625,
											"end": 649,
											"name": "REVERT"
										},
										{
											"begin": 625,
											"end": 649,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 625,
											"end": 649,
											"name": "JUMPDEST"
										},
										{
											"begin": 1537,
											"end": 1543,
											"name": "DUP2"
										},
										{
											"begin": 555,
											"end": 556,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "DUP1"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "AND"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "AND"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "DUP2"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "MSTORE"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "ADD"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "DUP2"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "MSTORE"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "ADD"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 522,
											"end": 536,
											"name": "KECCAK256"
										},
										{
											"begin": 522,
											"end": 552,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 522,
											"end": 552,
											"name": "ADD"
										},
										{
											"begin": 522,
											"end": 552,
											"name": "SLOAD"
										},
										{
											"begin": 522,
											"end": 556,
											"name": "GT"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "ISZERO"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "ISZERO"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "JUMPI"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "DUP1"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "REVERT"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "JUMPDEST"
										},
										{
											"begin": 1593,
											"end": 1594,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "DUP1"
										},
										{
											"begin": 1566,
											"end": 1572,
											"name": "DUP6"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "AND"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "AND"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "MSTORE"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "ADD"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "SWAP1"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "MSTORE"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "ADD"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "KECCAK256"
										},
										{
											"begin": 1559,
											"end": 1589,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1559,
											"end": 1589,
											"name": "ADD"
										},
										{
											"begin": 1559,
											"end": 1589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1594,
											"name": "DUP3"
										},
										{
											"begin": 1559,
											"end": 1594,
											"name": "DUP3"
										},
										{
											"begin": 1559,
											"end": 1594,
											"name": "SLOAD"
										},
										{
											"begin": 1559,
											"end": 1594,
											"name": "SUB"
										},
										{
											"begin": 1559,
											"end": 1594,
											"name": "SWAP3"
										},
										{
											"begin": 1559,
											"end": 1594,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1594,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1594,
											"name": "DUP2"
										},
										{
											"begin": 1559,
											"end": 1594,
											"name": "SWAP1"
										},
										{
											"begin": 1559,
											"end": 1594,
											"name": "SSTORE"
										},
										{
											"begin": 1559,
											"end": 1594,
											"name": "POP"
										},
										{
											"begin": 659,
											"end": 660,
											"name": "POP"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "POP"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "POP"
										},
										{
											"begin": 1440,
											"end": 1601,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "JUMPDEST"
										},
										{
											"begin": 1163,
											"end": 1173,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "DUP2"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "GT"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "ISZERO"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "JUMPI"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "INVALID"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "JUMPDEST"
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "SWAP1"
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "SLOAD"
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "SWAP1"
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "EXP"
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "SWAP1"
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "DIV"
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "AND"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "DUP2"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "GT"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "ISZERO"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "JUMPI"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "INVALID"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "JUMPDEST"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "EQ"
										},
										{
											"begin": 1150,
											"end": 1237,
											"name": "ISZERO"
										},
										{
											"begin": 1150,
											"end": 1237,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1150,
											"end": 1237,
											"name": "JUMPI"
										},
										{
											"begin": 1197,
											"end": 1206,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "EXP"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "SLOAD"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "MUL"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "NOT"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "AND"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "SWAP1"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "DUP4"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "GT"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "ISZERO"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "JUMPI"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "INVALID"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "JUMPDEST"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "MUL"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "OR"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "SWAP1"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "SSTORE"
										},
										{
											"begin": 1189,
											"end": 1206,
											"name": "POP"
										},
										{
											"begin": 1220,
											"end": 1227,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1220,
											"end": 1227,
											"name": "JUMP"
										},
										{
											"begin": 1150,
											"end": 1237,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1150,
											"end": 1237,
											"name": "JUMPDEST"
										},
										{
											"begin": 1259,
											"end": 1268,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "DUP2"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "GT"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "JUMPI"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "INVALID"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "SLOAD"
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "EXP"
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "DIV"
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "AND"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "DUP2"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "GT"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "JUMPI"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "INVALID"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "EQ"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "JUMPI"
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "DUP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "EXP"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "DUP2"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "SLOAD"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "DUP2"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "MUL"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "NOT"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "AND"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "DUP4"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "DUP2"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "GT"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "ISZERO"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "JUMPI"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "INVALID"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "JUMPDEST"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "MUL"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "OR"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "SSTORE"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1322,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1315,
											"end": 1322,
											"name": "JUMP"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "JUMPDEST"
										},
										{
											"begin": 1354,
											"end": 1363,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "DUP2"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "GT"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "ISZERO"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "JUMPI"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "INVALID"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "JUMPDEST"
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "SWAP1"
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "SLOAD"
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "SWAP1"
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "EXP"
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "SWAP1"
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "DIV"
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "AND"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "DUP2"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "GT"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "ISZERO"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "JUMPI"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "INVALID"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "JUMPDEST"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "EQ"
										},
										{
											"begin": 1341,
											"end": 1428,
											"name": "ISZERO"
										},
										{
											"begin": 1341,
											"end": 1428,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1428,
											"name": "JUMPI"
										},
										{
											"begin": 1387,
											"end": 1397,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1379,
											"end": 1384,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1379,
											"end": 1384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "EXP"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "DUP2"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "SLOAD"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "DUP2"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "MUL"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "NOT"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "AND"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "SWAP1"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "DUP4"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "DUP2"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "GT"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "ISZERO"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "JUMPI"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "INVALID"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "JUMPDEST"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "MUL"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "OR"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "SWAP1"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "SSTORE"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "POP"
										},
										{
											"begin": 1411,
											"end": 1418,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1411,
											"end": 1418,
											"name": "JUMP"
										},
										{
											"begin": 1341,
											"end": 1428,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1428,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1434,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "JUMPDEST"
										},
										{
											"begin": 1007,
											"end": 1022,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1007,
											"end": 1022,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1007,
											"end": 1022,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1007,
											"end": 1022,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1007,
											"end": 1022,
											"name": "JUMPDEST"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "MLOAD"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1032,
											"end": 1040,
											"name": "DUP6"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1042,
											"end": 1046,
											"name": "DUP5"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "AND"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1063,
											"name": "DUP4"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "DUP1"
										},
										{
											"begin": 1074,
											"end": 1080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "DUP1"
										},
										{
											"begin": 1081,
											"end": 1085,
											"name": "DUP6"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "AND"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "AND"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "DUP2"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "MSTORE"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "ADD"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "SWAP1"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "DUP2"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "MSTORE"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "ADD"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "KECCAK256"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "DUP3"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "ADD"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "MLOAD"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "DUP2"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "ADD"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "SSTORE"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "DUP3"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "ADD"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "MLOAD"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "DUP2"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "ADD"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "EXP"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "DUP2"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "SLOAD"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "DUP2"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "MUL"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "NOT"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "AND"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "SWAP1"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "DUP4"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "AND"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "MUL"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "OR"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "SWAP1"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "SSTORE"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "POP"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "DUP3"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "ADD"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "MLOAD"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "DUP2"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "ADD"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "SSTORE"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "SWAP1"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "POP"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "POP"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 881,
											"end": 1097,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "JUMPDEST"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "MSTORE"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "MSTORE"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "KECCAK256"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SWAP2"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "ADD"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SLOAD"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "ADD"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SLOAD"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "DUP3"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "MLOAD"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "DUP2"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "ADD"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "MSTORE"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "DUP2"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "MSTORE"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "ADD"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "AND"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "DUP2"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "MSTORE"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "ADD"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "DUP2"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "MSTORE"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "POP"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1603,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ProceedToNextStage()": "525083cc",
							"createPerson(uint256,address,uint256)": "5d59fc6c",
							"items(address)": "d321411c",
							"people(address)": "07de9735",
							"register(address)": "4420e486"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"people\",\"outputs\":[{\"name\":\"personId\",\"type\":\"uint256\"},{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"remainingTokens\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ProceedToNextStage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"personId\",\"type\":\"uint256\"},{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"remainingTokens\",\"type\":\"uint256\"}],\"name\":\"createPerson\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"items\",\"outputs\":[{\"name\":\"itemId\",\"type\":\"uint256\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Learn/Auction.sol\":\"Auction\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Learn/Auction.sol\":{\"keccak256\":\"0xf66efed56a128910b07233e9fdf93f13592e3ea5cd45817ed148ab321e33834e\",\"urls\":[\"bzzr://3ed71ff396cf75b181bbaf111a2ccb805b7f6444aae00fdd67e7696c436e69bf\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Learn/Auction.sol": {
				"ast": {
					"absolutePath": "Learn/Auction.sol",
					"exportedSymbols": {
						"Auction": [
							163
						]
					},
					"id": 164,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 163,
							"linearizedBaseContracts": [
								163
							],
							"name": "Auction",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Auction.Person",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "personId",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "105:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "105:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "addr",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "131:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 4,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "131:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "remainingTokens",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "153:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "153:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Person",
									"nodeType": "StructDefinition",
									"scope": 163,
									"src": "81:102:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Auction.Item",
									"id": 13,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "itemId",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "211:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "211:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"name": "tokens",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "235:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "235:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Item",
									"nodeType": "StructDefinition",
									"scope": 163,
									"src": "189:67:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Auction.Stage",
									"id": 18,
									"members": [
										{
											"id": 14,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "283:4:0"
										},
										{
											"id": 15,
											"name": "Reg",
											"nodeType": "EnumValue",
											"src": "297:3:0"
										},
										{
											"id": 16,
											"name": "Bid",
											"nodeType": "EnumValue",
											"src": "310:3:0"
										},
										{
											"id": 17,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "323:4:0"
										}
									],
									"name": "Stage",
									"nodeType": "EnumDefinition",
									"src": "262:71:0"
								},
								{
									"constant": false,
									"id": 22,
									"name": "people",
									"nodeType": "VariableDeclaration",
									"scope": 163,
									"src": "339:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$8_storage_$",
										"typeString": "mapping(address => struct Auction.Person storage ref)"
									},
									"typeName": {
										"id": 21,
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "347:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "339:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$8_storage_$",
											"typeString": "mapping(address => struct Auction.Person storage ref)"
										},
										"valueType": {
											"contractScope": null,
											"id": 20,
											"name": "Person",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "358:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Person_$8_storage_ptr",
												"typeString": "struct Auction.Person storage pointer"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"name": "items",
									"nodeType": "VariableDeclaration",
									"scope": 163,
									"src": "385:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Item_$13_storage_$",
										"typeString": "mapping(address => struct Auction.Item storage ref)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "393:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "385:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Item_$13_storage_$",
											"typeString": "mapping(address => struct Auction.Item storage ref)"
										},
										"valueType": {
											"contractScope": null,
											"id": 24,
											"name": "Item",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 13,
											"src": "404:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Item_$13_storage_ptr",
												"typeString": "struct Auction.Item storage pointer"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 28,
									"name": "stage",
									"nodeType": "VariableDeclaration",
									"scope": 163,
									"src": "428:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Stage_$18",
										"typeString": "enum Auction.Stage"
									},
									"typeName": {
										"contractScope": null,
										"id": 27,
										"name": "Stage",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 18,
										"src": "428:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$18",
											"typeString": "enum Auction.Stage"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 30,
									"name": "organizer",
									"nodeType": "VariableDeclaration",
									"scope": 163,
									"src": "445:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 29,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "445:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "504:71:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 35,
																		"name": "people",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "522:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$8_storage_$",
																			"typeString": "mapping(address => struct Auction.Person storage ref)"
																		}
																	},
																	"id": 37,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 36,
																		"name": "bidder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "529:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "522:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Person_$8_storage",
																		"typeString": "struct Auction.Person storage ref"
																	}
																},
																"id": 38,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "remainingTokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "522:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "555:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "522:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "514:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "514:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "514:43:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "567:1:0"
											}
										]
									},
									"id": 45,
									"name": "hasTokens",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"name": "bidder",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "488:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "487:16:0"
									},
									"src": "469:106:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "615:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_Stage_$18",
																"typeString": "enum Auction.Stage"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 50,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "633:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Auction.Stage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 51,
																"name": "_stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "642:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Auction.Stage"
																}
															},
															"src": "633:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 49,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "625:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "625:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "625:24:0"
											},
											{
												"id": 55,
												"nodeType": "PlaceholderStatement",
												"src": "659:1:0"
											}
										]
									},
									"id": 57,
									"name": "validStage",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"name": "_stage",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "601:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Stage_$18",
													"typeString": "enum Auction.Stage"
												},
												"typeName": {
													"contractScope": null,
													"id": 46,
													"name": "Stage",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 18,
													"src": "601:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Auction.Stage"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "600:14:0"
									},
									"src": "581:86:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "699:176:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 60,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "709:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$18",
															"typeString": "enum Auction.Stage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 61,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
																"typeString": "type(enum Auction.Stage)"
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Init",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "717:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$18",
															"typeString": "enum Auction.Stage"
														}
													},
													"src": "709:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Auction.Stage"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "709:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "750:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"argumentTypes": null,
															"hexValue": "307838343338333332393734313035333637303733393131333438373332373539333434373435383333",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "753:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x8438332974105367073911348732759344745833"
														},
														{
															"argumentTypes": null,
															"hexValue": "35",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "797:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															}
														],
														"id": 65,
														"name": "createPerson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "737:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "737:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "737:62:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "32",
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "822:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														{
															"argumentTypes": null,
															"hexValue": "307838343338333332393734313035333637303733393131333438373332373539333434373435",
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "825:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_184287128982494949094061766981512614500386629_by_1",
																"typeString": "int_const 184287128982494949094061766981512614500386629"
															},
															"value": "0x8438332974105367073911348732759344745"
														},
														{
															"argumentTypes": null,
															"hexValue": "35",
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "866:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															{
																"typeIdentifier": "t_rational_184287128982494949094061766981512614500386629_by_1",
																"typeString": "int_const 184287128982494949094061766981512614500386629"
															},
															{
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															}
														],
														"id": 71,
														"name": "createPerson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "809:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "809:59:0"
											}
										]
									},
									"id": 78,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Auction",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "699:0:0"
									},
									"scope": 163,
									"src": "673:202:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "997:100:0",
										"statements": [
											{
												"assignments": [
													88
												],
												"declarations": [
													{
														"constant": false,
														"id": 88,
														"name": "p",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "1007:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Person_$8_memory_ptr",
															"typeString": "struct Auction.Person memory"
														},
														"typeName": {
															"contractScope": null,
															"id": 87,
															"name": "Person",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "1007:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Person_$8_storage_ptr",
																"typeString": "struct Auction.Person storage pointer"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 94,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 90,
															"name": "personId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "1032:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 91,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1042:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 92,
															"name": "remainingTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1048:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 89,
														"name": "Person",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1025:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Person_$8_storage_ptr_$",
															"typeString": "type(struct Auction.Person storage pointer)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1025:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Person_$8_memory",
														"typeString": "struct Auction.Person memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1007:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 95,
															"name": "people",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "1074:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$8_storage_$",
																"typeString": "mapping(address => struct Auction.Person storage ref)"
															}
														},
														"id": 97,
														"indexExpression": {
															"argumentTypes": null,
															"id": 96,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1081:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1074:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Person_$8_storage",
															"typeString": "struct Auction.Person storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 98,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "1089:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Person_$8_memory_ptr",
															"typeString": "struct Auction.Person memory"
														}
													},
													"src": "1074:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Person_$8_storage",
														"typeString": "struct Auction.Person storage ref"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1074:16:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "createPerson",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "personId",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "912:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "938:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"name": "remainingTokens",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "960:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "902:87:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "997:0:0"
									},
									"scope": 163,
									"src": "881:216:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1140:294:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Auction.Stage"
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 105,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1154:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$18",
															"typeString": "enum Auction.Stage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 106,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1163:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
																"typeString": "type(enum Auction.Stage)"
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Init",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1163:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$18",
															"typeString": "enum Auction.Stage"
														}
													},
													"src": "1154:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 116,
												"nodeType": "IfStatement",
												"src": "1150:87:0",
												"trueBody": {
													"id": 115,
													"nodeType": "Block",
													"src": "1175:62:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 109,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "1189:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$18",
																		"typeString": "enum Auction.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 110,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "1197:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
																			"typeString": "type(enum Auction.Stage)"
																		}
																	},
																	"id": 111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Reg",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1197:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$18",
																		"typeString": "enum Auction.Stage"
																	}
																},
																"src": "1189:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Auction.Stage"
																}
															},
															"id": 113,
															"nodeType": "ExpressionStatement",
															"src": "1189:17:0"
														},
														{
															"expression": null,
															"functionReturnParameters": 104,
															"id": 114,
															"nodeType": "Return",
															"src": "1220:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Auction.Stage"
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 117,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1250:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$18",
															"typeString": "enum Auction.Stage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 118,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1259:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
																"typeString": "type(enum Auction.Stage)"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Reg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1259:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$18",
															"typeString": "enum Auction.Stage"
														}
													},
													"src": "1250:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 128,
												"nodeType": "IfStatement",
												"src": "1246:86:0",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1270:62:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 121,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "1284:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$18",
																		"typeString": "enum Auction.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 122,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "1292:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
																			"typeString": "type(enum Auction.Stage)"
																		}
																	},
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Bid",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1292:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$18",
																		"typeString": "enum Auction.Stage"
																	}
																},
																"src": "1284:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Auction.Stage"
																}
															},
															"id": 125,
															"nodeType": "ExpressionStatement",
															"src": "1284:17:0"
														},
														{
															"expression": null,
															"functionReturnParameters": 104,
															"id": 126,
															"nodeType": "Return",
															"src": "1315:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Auction.Stage"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 129,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1345:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$18",
															"typeString": "enum Auction.Stage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 130,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1354:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
																"typeString": "type(enum Auction.Stage)"
															}
														},
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Bid",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1354:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$18",
															"typeString": "enum Auction.Stage"
														}
													},
													"src": "1345:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 140,
												"nodeType": "IfStatement",
												"src": "1341:87:0",
												"trueBody": {
													"id": 139,
													"nodeType": "Block",
													"src": "1365:63:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 133,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "1379:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$18",
																		"typeString": "enum Auction.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 134,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "1387:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
																			"typeString": "type(enum Auction.Stage)"
																		}
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Done",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1387:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$18",
																		"typeString": "enum Auction.Stage"
																	}
																},
																"src": "1379:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Auction.Stage"
																}
															},
															"id": 137,
															"nodeType": "ExpressionStatement",
															"src": "1379:18:0"
														},
														{
															"expression": null,
															"functionReturnParameters": 104,
															"id": 138,
															"nodeType": "Return",
															"src": "1411:7:0"
														}
													]
												}
											}
										]
									},
									"id": 142,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "ProceedToNextStage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1130:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1140:0:0"
									},
									"scope": 163,
									"src": "1103:331:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "1549:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 154,
																"name": "people",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1559:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$8_storage_$",
																	"typeString": "mapping(address => struct Auction.Person storage ref)"
																}
															},
															"id": 156,
															"indexExpression": {
																"argumentTypes": null,
																"id": 155,
																"name": "bidder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "1566:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1559:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Person_$8_storage",
																"typeString": "struct Auction.Person storage ref"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "remainingTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1559:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1593:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1559:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1559:35:0"
											}
										]
									},
									"id": 162,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 147,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1508:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
															"typeString": "type(enum Auction.Stage)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Reg",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1508:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Auction.Stage"
													}
												}
											],
											"id": 149,
											"modifierName": {
												"argumentTypes": null,
												"id": 146,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 57,
												"src": "1497:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$18_$",
													"typeString": "modifier (enum Auction.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1497:21:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 151,
													"name": "bidder",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 144,
													"src": "1537:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 152,
											"modifierName": {
												"argumentTypes": null,
												"id": 150,
												"name": "hasTokens",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 45,
												"src": "1527:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1527:17:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"name": "bidder",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1457:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1549:0:0"
									},
									"scope": 163,
									"src": "1440:161:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 164,
							"src": "58:1545:0"
						}
					],
					"src": "32:1572:0"
				},
				"id": 0,
				"legacyAST": {
					"attributes": {
						"absolutePath": "Learn/Auction.sol",
						"exportedSymbols": {
							"Auction": [
								163
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 1,
							"name": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									163
								],
								"name": "Auction",
								"scope": 164
							},
							"children": [
								{
									"attributes": {
										"canonicalName": "Auction.Person",
										"name": "Person",
										"scope": 163,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"constant": false,
												"name": "personId",
												"scope": 8,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "uint256",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "uint256",
														"type": "uint256"
													},
													"id": 2,
													"name": "ElementaryTypeName",
													"src": "105:7:0"
												}
											],
											"id": 3,
											"name": "VariableDeclaration",
											"src": "105:16:0"
										},
										{
											"attributes": {
												"constant": false,
												"name": "addr",
												"scope": 8,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "address",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 4,
													"name": "ElementaryTypeName",
													"src": "131:7:0"
												}
											],
											"id": 5,
											"name": "VariableDeclaration",
											"src": "131:12:0"
										},
										{
											"attributes": {
												"constant": false,
												"name": "remainingTokens",
												"scope": 8,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "uint256",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "uint256",
														"type": "uint256"
													},
													"id": 6,
													"name": "ElementaryTypeName",
													"src": "153:7:0"
												}
											],
											"id": 7,
											"name": "VariableDeclaration",
											"src": "153:23:0"
										}
									],
									"id": 8,
									"name": "StructDefinition",
									"src": "81:102:0"
								},
								{
									"attributes": {
										"canonicalName": "Auction.Item",
										"name": "Item",
										"scope": 163,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"constant": false,
												"name": "itemId",
												"scope": 13,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "uint256",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "uint256",
														"type": "uint256"
													},
													"id": 9,
													"name": "ElementaryTypeName",
													"src": "211:7:0"
												}
											],
											"id": 10,
											"name": "VariableDeclaration",
											"src": "211:14:0"
										},
										{
											"attributes": {
												"constant": false,
												"name": "tokens",
												"scope": 13,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "uint256",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "uint256",
														"type": "uint256"
													},
													"id": 11,
													"name": "ElementaryTypeName",
													"src": "235:7:0"
												}
											],
											"id": 12,
											"name": "VariableDeclaration",
											"src": "235:14:0"
										}
									],
									"id": 13,
									"name": "StructDefinition",
									"src": "189:67:0"
								},
								{
									"attributes": {
										"canonicalName": "Auction.Stage",
										"name": "Stage"
									},
									"children": [
										{
											"attributes": {
												"name": "Init"
											},
											"id": 14,
											"name": "EnumValue",
											"src": "283:4:0"
										},
										{
											"attributes": {
												"name": "Reg"
											},
											"id": 15,
											"name": "EnumValue",
											"src": "297:3:0"
										},
										{
											"attributes": {
												"name": "Bid"
											},
											"id": 16,
											"name": "EnumValue",
											"src": "310:3:0"
										},
										{
											"attributes": {
												"name": "Done"
											},
											"id": 17,
											"name": "EnumValue",
											"src": "323:4:0"
										}
									],
									"id": 18,
									"name": "EnumDefinition",
									"src": "262:71:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "people",
										"scope": 163,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => struct Auction.Person storage ref)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => struct Auction.Person storage ref)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 19,
													"name": "ElementaryTypeName",
													"src": "347:7:0"
												},
												{
													"attributes": {
														"contractScope": null,
														"name": "Person",
														"referencedDeclaration": 8,
														"type": "struct Auction.Person storage pointer"
													},
													"id": 20,
													"name": "UserDefinedTypeName",
													"src": "358:6:0"
												}
											],
											"id": 21,
											"name": "Mapping",
											"src": "339:26:0"
										}
									],
									"id": 22,
									"name": "VariableDeclaration",
									"src": "339:40:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "items",
										"scope": 163,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => struct Auction.Item storage ref)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => struct Auction.Item storage ref)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 23,
													"name": "ElementaryTypeName",
													"src": "393:7:0"
												},
												{
													"attributes": {
														"contractScope": null,
														"name": "Item",
														"referencedDeclaration": 13,
														"type": "struct Auction.Item storage pointer"
													},
													"id": 24,
													"name": "UserDefinedTypeName",
													"src": "404:4:0"
												}
											],
											"id": 25,
											"name": "Mapping",
											"src": "385:24:0"
										}
									],
									"id": 26,
									"name": "VariableDeclaration",
									"src": "385:37:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "stage",
										"scope": 163,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "enum Auction.Stage",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Stage",
												"referencedDeclaration": 18,
												"type": "enum Auction.Stage"
											},
											"id": 27,
											"name": "UserDefinedTypeName",
											"src": "428:5:0"
										}
									],
									"id": 28,
									"name": "VariableDeclaration",
									"src": "428:11:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "organizer",
										"scope": 163,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 29,
											"name": "ElementaryTypeName",
											"src": "445:7:0"
										}
									],
									"id": 30,
									"name": "VariableDeclaration",
									"src": "445:17:0"
								},
								{
									"attributes": {
										"name": "hasTokens",
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "bidder",
														"scope": 45,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 31,
															"name": "ElementaryTypeName",
															"src": "488:7:0"
														}
													],
													"id": 32,
													"name": "VariableDeclaration",
													"src": "488:14:0"
												}
											],
											"id": 33,
											"name": "ParameterList",
											"src": "487:16:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 184,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 34,
																	"name": "Identifier",
																	"src": "514:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "remainingTokens",
																				"referencedDeclaration": 7,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "struct Auction.Person storage ref"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 22,
																								"type": "mapping(address => struct Auction.Person storage ref)",
																								"value": "people"
																							},
																							"id": 35,
																							"name": "Identifier",
																							"src": "522:6:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 32,
																								"type": "address",
																								"value": "bidder"
																							},
																							"id": 36,
																							"name": "Identifier",
																							"src": "529:6:0"
																						}
																					],
																					"id": 37,
																					"name": "IndexAccess",
																					"src": "522:14:0"
																				}
																			],
																			"id": 38,
																			"name": "MemberAccess",
																			"src": "522:30:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 39,
																			"name": "Literal",
																			"src": "555:1:0"
																		}
																	],
																	"id": 40,
																	"name": "BinaryOperation",
																	"src": "522:34:0"
																}
															],
															"id": 41,
															"name": "FunctionCall",
															"src": "514:43:0"
														}
													],
													"id": 42,
													"name": "ExpressionStatement",
													"src": "514:43:0"
												},
												{
													"id": 43,
													"name": "PlaceholderStatement",
													"src": "567:1:0"
												}
											],
											"id": 44,
											"name": "Block",
											"src": "504:71:0"
										}
									],
									"id": 45,
									"name": "ModifierDefinition",
									"src": "469:106:0"
								},
								{
									"attributes": {
										"name": "validStage",
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_stage",
														"scope": 57,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "enum Auction.Stage",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"contractScope": null,
																"name": "Stage",
																"referencedDeclaration": 18,
																"type": "enum Auction.Stage"
															},
															"id": 46,
															"name": "UserDefinedTypeName",
															"src": "601:5:0"
														}
													],
													"id": 47,
													"name": "VariableDeclaration",
													"src": "601:12:0"
												}
											],
											"id": 48,
											"name": "ParameterList",
											"src": "600:14:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 184,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 49,
																	"name": "Identifier",
																	"src": "625:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_enum$_Stage_$18",
																			"typeString": "enum Auction.Stage"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 28,
																				"type": "enum Auction.Stage",
																				"value": "stage"
																			},
																			"id": 50,
																			"name": "Identifier",
																			"src": "633:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 47,
																				"type": "enum Auction.Stage",
																				"value": "_stage"
																			},
																			"id": 51,
																			"name": "Identifier",
																			"src": "642:6:0"
																		}
																	],
																	"id": 52,
																	"name": "BinaryOperation",
																	"src": "633:15:0"
																}
															],
															"id": 53,
															"name": "FunctionCall",
															"src": "625:24:0"
														}
													],
													"id": 54,
													"name": "ExpressionStatement",
													"src": "625:24:0"
												},
												{
													"id": 55,
													"name": "PlaceholderStatement",
													"src": "659:1:0"
												}
											],
											"id": 56,
											"name": "Block",
											"src": "615:52:0"
										}
									],
									"id": 57,
									"name": "ModifierDefinition",
									"src": "581:86:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "Auction",
										"payable": false,
										"scope": 163,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 58,
											"name": "ParameterList",
											"src": "689:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 59,
											"name": "ParameterList",
											"src": "699:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "enum Auction.Stage"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 28,
																		"type": "enum Auction.Stage",
																		"value": "stage"
																	},
																	"id": 60,
																	"name": "Identifier",
																	"src": "709:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"member_name": "Init",
																		"referencedDeclaration": null,
																		"type": "enum Auction.Stage"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 18,
																				"type": "type(enum Auction.Stage)",
																				"value": "Stage"
																			},
																			"id": 61,
																			"name": "Identifier",
																			"src": "717:5:0"
																		}
																	],
																	"id": 62,
																	"name": "MemberAccess",
																	"src": "717:10:0"
																}
															],
															"id": 63,
															"name": "Assignment",
															"src": "709:18:0"
														}
													],
													"id": 64,
													"name": "ExpressionStatement",
													"src": "709:18:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_rational_5_by_1",
																				"typeString": "int_const 5"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 102,
																		"type": "function (uint256,address,uint256)",
																		"value": "createPerson"
																	},
																	"id": 65,
																	"name": "Identifier",
																	"src": "737:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "31",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 1",
																		"value": "1"
																	},
																	"id": 66,
																	"name": "Literal",
																	"src": "750:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "307838343338333332393734313035333637303733393131333438373332373539333434373435383333",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "address",
																		"value": "0x8438332974105367073911348732759344745833"
																	},
																	"id": 67,
																	"name": "Literal",
																	"src": "753:42:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "35",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 5",
																		"value": "5"
																	},
																	"id": 68,
																	"name": "Literal",
																	"src": "797:1:0"
																}
															],
															"id": 69,
															"name": "FunctionCall",
															"src": "737:62:0"
														}
													],
													"id": 70,
													"name": "ExpressionStatement",
													"src": "737:62:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			{
																				"typeIdentifier": "t_rational_184287128982494949094061766981512614500386629_by_1",
																				"typeString": "int_const 184287128982494949094061766981512614500386629"
																			},
																			{
																				"typeIdentifier": "t_rational_5_by_1",
																				"typeString": "int_const 5"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 102,
																		"type": "function (uint256,address,uint256)",
																		"value": "createPerson"
																	},
																	"id": 71,
																	"name": "Identifier",
																	"src": "809:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "32",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 2",
																		"value": "2"
																	},
																	"id": 72,
																	"name": "Literal",
																	"src": "822:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "307838343338333332393734313035333637303733393131333438373332373539333434373435",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 184287128982494949094061766981512614500386629",
																		"value": "0x8438332974105367073911348732759344745"
																	},
																	"id": 73,
																	"name": "Literal",
																	"src": "825:39:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "35",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 5",
																		"value": "5"
																	},
																	"id": 74,
																	"name": "Literal",
																	"src": "866:1:0"
																}
															],
															"id": 75,
															"name": "FunctionCall",
															"src": "809:59:0"
														}
													],
													"id": 76,
													"name": "ExpressionStatement",
													"src": "809:59:0"
												}
											],
											"id": 77,
											"name": "Block",
											"src": "699:176:0"
										}
									],
									"id": 78,
									"name": "FunctionDefinition",
									"src": "673:202:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "createPerson",
										"payable": false,
										"scope": 163,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "personId",
														"scope": 102,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 79,
															"name": "ElementaryTypeName",
															"src": "912:7:0"
														}
													],
													"id": 80,
													"name": "VariableDeclaration",
													"src": "912:16:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "addr",
														"scope": 102,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 81,
															"name": "ElementaryTypeName",
															"src": "938:7:0"
														}
													],
													"id": 82,
													"name": "VariableDeclaration",
													"src": "938:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "remainingTokens",
														"scope": 102,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 83,
															"name": "ElementaryTypeName",
															"src": "960:7:0"
														}
													],
													"id": 84,
													"name": "VariableDeclaration",
													"src": "960:23:0"
												}
											],
											"id": 85,
											"name": "ParameterList",
											"src": "902:87:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 86,
											"name": "ParameterList",
											"src": "997:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															88
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "p",
																"scope": 102,
																"stateVariable": false,
																"storageLocation": "memory",
																"type": "struct Auction.Person memory",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"contractScope": null,
																		"name": "Person",
																		"referencedDeclaration": 8,
																		"type": "struct Auction.Person storage pointer"
																	},
																	"id": 87,
																	"name": "UserDefinedTypeName",
																	"src": "1007:6:0"
																}
															],
															"id": 88,
															"name": "VariableDeclaration",
															"src": "1007:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": true,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "struct Auction.Person memory",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 8,
																		"type": "type(struct Auction.Person storage pointer)",
																		"value": "Person"
																	},
																	"id": 89,
																	"name": "Identifier",
																	"src": "1025:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 80,
																		"type": "uint256",
																		"value": "personId"
																	},
																	"id": 90,
																	"name": "Identifier",
																	"src": "1032:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 82,
																		"type": "address",
																		"value": "addr"
																	},
																	"id": 91,
																	"name": "Identifier",
																	"src": "1042:4:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 84,
																		"type": "uint256",
																		"value": "remainingTokens"
																	},
																	"id": 92,
																	"name": "Identifier",
																	"src": "1048:15:0"
																}
															],
															"id": 93,
															"name": "FunctionCall",
															"src": "1025:39:0"
														}
													],
													"id": 94,
													"name": "VariableDeclarationStatement",
													"src": "1007:57:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "struct Auction.Person storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "struct Auction.Person storage ref"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 22,
																				"type": "mapping(address => struct Auction.Person storage ref)",
																				"value": "people"
																			},
																			"id": 95,
																			"name": "Identifier",
																			"src": "1074:6:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 82,
																				"type": "address",
																				"value": "addr"
																			},
																			"id": 96,
																			"name": "Identifier",
																			"src": "1081:4:0"
																		}
																	],
																	"id": 97,
																	"name": "IndexAccess",
																	"src": "1074:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 88,
																		"type": "struct Auction.Person memory",
																		"value": "p"
																	},
																	"id": 98,
																	"name": "Identifier",
																	"src": "1089:1:0"
																}
															],
															"id": 99,
															"name": "Assignment",
															"src": "1074:16:0"
														}
													],
													"id": 100,
													"name": "ExpressionStatement",
													"src": "1074:16:0"
												}
											],
											"id": 101,
											"name": "Block",
											"src": "997:100:0"
										}
									],
									"id": 102,
									"name": "FunctionDefinition",
									"src": "881:216:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "ProceedToNextStage",
										"payable": false,
										"scope": 163,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 103,
											"name": "ParameterList",
											"src": "1130:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 104,
											"name": "ParameterList",
											"src": "1140:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Auction.Stage"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 28,
																		"type": "enum Auction.Stage",
																		"value": "stage"
																	},
																	"id": 105,
																	"name": "Identifier",
																	"src": "1154:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"member_name": "Init",
																		"referencedDeclaration": null,
																		"type": "enum Auction.Stage"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 18,
																				"type": "type(enum Auction.Stage)",
																				"value": "Stage"
																			},
																			"id": 106,
																			"name": "Identifier",
																			"src": "1163:5:0"
																		}
																	],
																	"id": 107,
																	"name": "MemberAccess",
																	"src": "1163:10:0"
																}
															],
															"id": 108,
															"name": "BinaryOperation",
															"src": "1154:19:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "enum Auction.Stage"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 28,
																						"type": "enum Auction.Stage",
																						"value": "stage"
																					},
																					"id": 109,
																					"name": "Identifier",
																					"src": "1189:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"member_name": "Reg",
																						"referencedDeclaration": null,
																						"type": "enum Auction.Stage"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 18,
																								"type": "type(enum Auction.Stage)",
																								"value": "Stage"
																							},
																							"id": 110,
																							"name": "Identifier",
																							"src": "1197:5:0"
																						}
																					],
																					"id": 111,
																					"name": "MemberAccess",
																					"src": "1197:9:0"
																				}
																			],
																			"id": 112,
																			"name": "Assignment",
																			"src": "1189:17:0"
																		}
																	],
																	"id": 113,
																	"name": "ExpressionStatement",
																	"src": "1189:17:0"
																},
																{
																	"attributes": {
																		"expression": null,
																		"functionReturnParameters": 104
																	},
																	"id": 114,
																	"name": "Return",
																	"src": "1220:7:0"
																}
															],
															"id": 115,
															"name": "Block",
															"src": "1175:62:0"
														}
													],
													"id": 116,
													"name": "IfStatement",
													"src": "1150:87:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Auction.Stage"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 28,
																		"type": "enum Auction.Stage",
																		"value": "stage"
																	},
																	"id": 117,
																	"name": "Identifier",
																	"src": "1250:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"member_name": "Reg",
																		"referencedDeclaration": null,
																		"type": "enum Auction.Stage"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 18,
																				"type": "type(enum Auction.Stage)",
																				"value": "Stage"
																			},
																			"id": 118,
																			"name": "Identifier",
																			"src": "1259:5:0"
																		}
																	],
																	"id": 119,
																	"name": "MemberAccess",
																	"src": "1259:9:0"
																}
															],
															"id": 120,
															"name": "BinaryOperation",
															"src": "1250:18:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "enum Auction.Stage"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 28,
																						"type": "enum Auction.Stage",
																						"value": "stage"
																					},
																					"id": 121,
																					"name": "Identifier",
																					"src": "1284:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"member_name": "Bid",
																						"referencedDeclaration": null,
																						"type": "enum Auction.Stage"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 18,
																								"type": "type(enum Auction.Stage)",
																								"value": "Stage"
																							},
																							"id": 122,
																							"name": "Identifier",
																							"src": "1292:5:0"
																						}
																					],
																					"id": 123,
																					"name": "MemberAccess",
																					"src": "1292:9:0"
																				}
																			],
																			"id": 124,
																			"name": "Assignment",
																			"src": "1284:17:0"
																		}
																	],
																	"id": 125,
																	"name": "ExpressionStatement",
																	"src": "1284:17:0"
																},
																{
																	"attributes": {
																		"expression": null,
																		"functionReturnParameters": 104
																	},
																	"id": 126,
																	"name": "Return",
																	"src": "1315:7:0"
																}
															],
															"id": 127,
															"name": "Block",
															"src": "1270:62:0"
														}
													],
													"id": 128,
													"name": "IfStatement",
													"src": "1246:86:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Auction.Stage"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 28,
																		"type": "enum Auction.Stage",
																		"value": "stage"
																	},
																	"id": 129,
																	"name": "Identifier",
																	"src": "1345:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"member_name": "Bid",
																		"referencedDeclaration": null,
																		"type": "enum Auction.Stage"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 18,
																				"type": "type(enum Auction.Stage)",
																				"value": "Stage"
																			},
																			"id": 130,
																			"name": "Identifier",
																			"src": "1354:5:0"
																		}
																	],
																	"id": 131,
																	"name": "MemberAccess",
																	"src": "1354:9:0"
																}
															],
															"id": 132,
															"name": "BinaryOperation",
															"src": "1345:18:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "enum Auction.Stage"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 28,
																						"type": "enum Auction.Stage",
																						"value": "stage"
																					},
																					"id": 133,
																					"name": "Identifier",
																					"src": "1379:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"member_name": "Done",
																						"referencedDeclaration": null,
																						"type": "enum Auction.Stage"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 18,
																								"type": "type(enum Auction.Stage)",
																								"value": "Stage"
																							},
																							"id": 134,
																							"name": "Identifier",
																							"src": "1387:5:0"
																						}
																					],
																					"id": 135,
																					"name": "MemberAccess",
																					"src": "1387:10:0"
																				}
																			],
																			"id": 136,
																			"name": "Assignment",
																			"src": "1379:18:0"
																		}
																	],
																	"id": 137,
																	"name": "ExpressionStatement",
																	"src": "1379:18:0"
																},
																{
																	"attributes": {
																		"expression": null,
																		"functionReturnParameters": 104
																	},
																	"id": 138,
																	"name": "Return",
																	"src": "1411:7:0"
																}
															],
															"id": 139,
															"name": "Block",
															"src": "1365:63:0"
														}
													],
													"id": 140,
													"name": "IfStatement",
													"src": "1341:87:0"
												}
											],
											"id": 141,
											"name": "Block",
											"src": "1140:294:0"
										}
									],
									"id": 142,
									"name": "FunctionDefinition",
									"src": "1103:331:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "register",
										"payable": false,
										"scope": 163,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "bidder",
														"scope": 162,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 143,
															"name": "ElementaryTypeName",
															"src": "1458:7:0"
														}
													],
													"id": 144,
													"name": "VariableDeclaration",
													"src": "1458:14:0"
												}
											],
											"id": 145,
											"name": "ParameterList",
											"src": "1457:16:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 153,
											"name": "ParameterList",
											"src": "1549:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 57,
														"type": "modifier (enum Auction.Stage)",
														"value": "validStage"
													},
													"id": 146,
													"name": "Identifier",
													"src": "1497:10:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"member_name": "Reg",
														"referencedDeclaration": null,
														"type": "enum Auction.Stage"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 18,
																"type": "type(enum Auction.Stage)",
																"value": "Stage"
															},
															"id": 147,
															"name": "Identifier",
															"src": "1508:5:0"
														}
													],
													"id": 148,
													"name": "MemberAccess",
													"src": "1508:9:0"
												}
											],
											"id": 149,
											"name": "ModifierInvocation",
											"src": "1497:21:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 45,
														"type": "modifier (address)",
														"value": "hasTokens"
													},
													"id": 150,
													"name": "Identifier",
													"src": "1527:9:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 144,
														"type": "address",
														"value": "bidder"
													},
													"id": 151,
													"name": "Identifier",
													"src": "1537:6:0"
												}
											],
											"id": 152,
											"name": "ModifierInvocation",
											"src": "1527:17:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"member_name": "remainingTokens",
																		"referencedDeclaration": 7,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "struct Auction.Person storage ref"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 22,
																						"type": "mapping(address => struct Auction.Person storage ref)",
																						"value": "people"
																					},
																					"id": 154,
																					"name": "Identifier",
																					"src": "1559:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 144,
																						"type": "address",
																						"value": "bidder"
																					},
																					"id": 155,
																					"name": "Identifier",
																					"src": "1566:6:0"
																				}
																			],
																			"id": 156,
																			"name": "IndexAccess",
																			"src": "1559:14:0"
																		}
																	],
																	"id": 157,
																	"name": "MemberAccess",
																	"src": "1559:30:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "31",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 1",
																		"value": "1"
																	},
																	"id": 158,
																	"name": "Literal",
																	"src": "1593:1:0"
																}
															],
															"id": 159,
															"name": "Assignment",
															"src": "1559:35:0"
														}
													],
													"id": 160,
													"name": "ExpressionStatement",
													"src": "1559:35:0"
												}
											],
											"id": 161,
											"name": "Block",
											"src": "1549:52:0"
										}
									],
									"id": 162,
									"name": "FunctionDefinition",
									"src": "1440:161:0"
								}
							],
							"id": 163,
							"name": "ContractDefinition",
							"src": "58:1545:0"
						}
					],
					"id": 164,
					"name": "SourceUnit",
					"src": "32:1572:0"
				}
			}
		}
	}
}