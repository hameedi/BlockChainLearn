{
	"id": "13a44db1a64aaf6f38dddea4c03f410b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.17",
	"solcLongVersion": "0.4.17+commit.bdeb9e52",
	"input": {
		"language": "Solidity",
		"sources": {
			"Learn/BallotWithModifier.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.4.0;\r\ncontract Ballot {\r\n\r\n    struct Voter {\r\n        uint weight;\r\n        bool voted;\r\n        uint8 vote;\r\n        address delegate;\r\n    }\r\n    struct Proposal {\r\n        uint voteCount;\r\n    }\r\n    enum Stage {Init,Reg, Vote, Done}\r\n    Stage public stage = Stage.Init;\r\n    \r\n    address chairperson;\r\n    mapping(address => Voter) voters;\r\n    Proposal[] proposals;\r\n\r\n    event votingCompleted();\r\n    \r\n    uint startTime;\r\n    //modifiers\r\n   modifier validStage(Stage reqStage)\r\n    { require(stage == reqStage);\r\n      _;\r\n    }\r\n\r\n\r\n    /// Create a new ballot with $(_numProposals) different proposals.\r\n    function Ballot(uint8 _numProposals) public  {\r\n        chairperson = msg.sender;\r\n        voters[chairperson].weight = 2; // weight is 2 for testing purposes\r\n        proposals.length = _numProposals;\r\n        stage = Stage.Reg;\r\n        startTime = now;\r\n    }\r\n\r\n    /// Give $(toVoter) the right to vote on this ballot.\r\n    /// May only be called by $(chairperson).\r\n    function register(address toVoter) public validStage(Stage.Reg) {\r\n        //if (stage != Stage.Reg) {return;}\r\n        if (msg.sender != chairperson || voters[toVoter].voted) return;\r\n        voters[toVoter].weight = 1;\r\n        voters[toVoter].voted = false;\r\n        if (now > (startTime+ 30 seconds)) {stage = Stage.Vote; }        \r\n    }\r\n\r\n    /// Give a single vote to proposal $(toProposal).\r\n    function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r\n       // if (stage != Stage.Vote) {return;}\r\n        Voter storage sender = voters[msg.sender];\r\n        if (sender.voted || toProposal >= proposals.length) return;\r\n        sender.voted = true;\r\n        sender.vote = toProposal;   \r\n        proposals[toProposal].voteCount += sender.weight;\r\n        if (now > (startTime+ 30 seconds)) {stage = Stage.Done; votingCompleted();}        \r\n        \r\n    }\r\n\r\n    function winningProposal() public validStage(Stage.Done) constant returns (uint8 _winningProposal) {\r\n       //if(stage != Stage.Done) {return;}\r\n        uint256 winningVoteCount = 0;\r\n        for (uint8 prop = 0; prop < proposals.length; prop++)\r\n            if (proposals[prop].voteCount > winningVoteCount) {\r\n                winningVoteCount = proposals[prop].voteCount;\r\n                _winningProposal = prop;\r\n            }\r\n       assert (winningVoteCount > 0);\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Learn/BallotWithModifier.sol": {
				"Ballot": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "toVoter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"name": "_winningProposal",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "toProposal",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_numProposals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "votingCompleted",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Learn/BallotWithModifier.sol\":58:2414  contract Ballot {\r... */\n  mstore(0x40, 0x60)\n    /* \"Learn/BallotWithModifier.sol\":316:326  Stage.Init */\n  0x0\n    /* \"Learn/BallotWithModifier.sol\":295:326  Stage public stage = Stage.Init */\n  dup1\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x3\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Learn/BallotWithModifier.sol\":675:937  function Ballot(uint8 _numProposals) public  {\r... */\n  jumpi(tag_2, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_2:\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  pop\n  pop\n    /* \"Learn/BallotWithModifier.sol\":745:755  msg.sender */\n  caller\n    /* \"Learn/BallotWithModifier.sol\":731:742  chairperson */\n  0x0\n  0x1\n    /* \"Learn/BallotWithModifier.sol\":731:755  chairperson = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Learn/BallotWithModifier.sol\":795:796  2 */\n  0x2\n    /* \"Learn/BallotWithModifier.sol\":766:772  voters */\n  0x1\n    /* \"Learn/BallotWithModifier.sol\":766:785  voters[chairperson] */\n  0x0\n    /* \"Learn/BallotWithModifier.sol\":773:784  chairperson */\n  dup1\n  0x1\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Learn/BallotWithModifier.sol\":766:785  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"Learn/BallotWithModifier.sol\":766:792  voters[chairperson].weight */\n  0x0\n  add\n    /* \"Learn/BallotWithModifier.sol\":766:796  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Learn/BallotWithModifier.sol\":862:875  _numProposals */\n  dup1\n    /* \"Learn/BallotWithModifier.sol\":843:875  proposals.length = _numProposals */\n  0xff\n  and\n    /* \"Learn/BallotWithModifier.sol\":843:852  proposals */\n  0x2\n    /* \"Learn/BallotWithModifier.sol\":843:875  proposals.length = _numProposals */\n  dup2\n  tag_5\n  swap2\n  swap1\n  jump\t// in(tag_6)\ntag_5:\n  pop\n    /* \"Learn/BallotWithModifier.sol\":894:903  Stage.Reg */\n  0x1\n    /* \"Learn/BallotWithModifier.sol\":886:891  stage */\n  0x0\n  dup1\n    /* \"Learn/BallotWithModifier.sol\":886:903  stage = Stage.Reg */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x3\n  dup2\n  gt\n  iszero\n  tag_7\n  jumpi\n  invalid\ntag_7:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Learn/BallotWithModifier.sol\":926:929  now */\n  timestamp\n    /* \"Learn/BallotWithModifier.sol\":914:923  startTime */\n  0x3\n    /* \"Learn/BallotWithModifier.sol\":914:929  startTime = now */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Learn/BallotWithModifier.sol\":675:937  function Ballot(uint8 _numProposals) public  {\r... */\n  pop\n    /* \"Learn/BallotWithModifier.sol\":58:2414  contract Ballot {\r... */\n  jump(tag_8)\ntag_6:\n  dup2\n  sload\n  dup2\n  dup4\n  sstore\n  dup2\n  dup2\n  iszero\n  gt\n  tag_9\n  jumpi\n  dup2\n  dup4\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap2\n  dup3\n  add\n  swap2\n  add\n  tag_10\n  swap2\n  swap1\n  jump\t// in(tag_11)\ntag_10:\ntag_9:\n  pop\n  pop\n  pop\n  jump\t// out\ntag_11:\n  tag_12\n  swap2\n  swap1\ntag_13:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_14\n  jumpi\n  0x0\n  dup1\n  dup3\n  add\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_13)\ntag_14:\n  pop\n  swap1\n  jump\ntag_12:\n  swap1\n  jump\t// out\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Learn/BallotWithModifier.sol\":58:2414  contract Ballot {\r... */\n      mstore(0x40, 0x60)\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x4420e486\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_5\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"Learn/BallotWithModifier.sol\":1051:1393  function register(address toVoter) public validStage(Stage.Reg) {\r... */\n    tag_2:\n      jumpi(tag_6, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_6:\n      tag_7\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"Learn/BallotWithModifier.sol\":1932:2411  function winningProposal() public validStage(Stage.Done) constant returns (uint8 _winningProposal) {\r... */\n    tag_3:\n      jumpi(tag_9, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_9:\n      tag_10\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Learn/BallotWithModifier.sol\":1456:1924  function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r... */\n    tag_4:\n      jumpi(tag_12, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_12:\n      tag_13\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_14)\n    tag_13:\n      stop\n        /* \"Learn/BallotWithModifier.sol\":295:326  Stage public stage = Stage.Init */\n    tag_5:\n      jumpi(tag_15, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_15:\n      tag_16\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0x3\n      dup2\n      gt\n      iszero\n      tag_18\n      jumpi\n      invalid\n    tag_18:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Learn/BallotWithModifier.sol\":1051:1393  function register(address toVoter) public validStage(Stage.Reg) {\r... */\n    tag_8:\n        /* \"Learn/BallotWithModifier.sol\":1104:1113  Stage.Reg */\n      0x1\n        /* \"Learn/BallotWithModifier.sol\":566:574  reqStage */\n      dup1\n        /* \"Learn/BallotWithModifier.sol\":557:574  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      invalid\n    tag_20:\n        /* \"Learn/BallotWithModifier.sol\":557:562  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learn/BallotWithModifier.sol\":557:574  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      eq\n        /* \"Learn/BallotWithModifier.sol\":549:575  require(stage == reqStage) */\n      iszero\n      iszero\n      tag_22\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_22:\n        /* \"Learn/BallotWithModifier.sol\":1189:1200  chairperson */\n      0x0\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Learn/BallotWithModifier.sol\":1175:1200  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Learn/BallotWithModifier.sol\":1175:1185  msg.sender */\n      caller\n        /* \"Learn/BallotWithModifier.sol\":1175:1200  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Learn/BallotWithModifier.sol\":1175:1225  msg.sender != chairperson || voters[toVoter].voted */\n      dup1\n      tag_24\n      jumpi\n      pop\n        /* \"Learn/BallotWithModifier.sol\":1204:1210  voters */\n      0x1\n        /* \"Learn/BallotWithModifier.sol\":1204:1219  voters[toVoter] */\n      0x0\n        /* \"Learn/BallotWithModifier.sol\":1211:1218  toVoter */\n      dup4\n        /* \"Learn/BallotWithModifier.sol\":1204:1219  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Learn/BallotWithModifier.sol\":1204:1225  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learn/BallotWithModifier.sol\":1175:1225  msg.sender != chairperson || voters[toVoter].voted */\n    tag_24:\n        /* \"Learn/BallotWithModifier.sol\":1171:1234  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n      iszero\n      tag_25\n      jumpi\n        /* \"Learn/BallotWithModifier.sol\":1227:1234  return; */\n      jump(tag_23)\n        /* \"Learn/BallotWithModifier.sol\":1171:1234  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n    tag_25:\n        /* \"Learn/BallotWithModifier.sol\":1269:1270  1 */\n      0x1\n        /* \"Learn/BallotWithModifier.sol\":1244:1250  voters */\n      dup1\n        /* \"Learn/BallotWithModifier.sol\":1244:1259  voters[toVoter] */\n      0x0\n        /* \"Learn/BallotWithModifier.sol\":1251:1258  toVoter */\n      dup5\n        /* \"Learn/BallotWithModifier.sol\":1244:1259  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Learn/BallotWithModifier.sol\":1244:1266  voters[toVoter].weight */\n      0x0\n      add\n        /* \"Learn/BallotWithModifier.sol\":1244:1270  voters[toVoter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Learn/BallotWithModifier.sol\":1305:1310  false */\n      0x0\n        /* \"Learn/BallotWithModifier.sol\":1281:1287  voters */\n      0x1\n        /* \"Learn/BallotWithModifier.sol\":1281:1296  voters[toVoter] */\n      0x0\n        /* \"Learn/BallotWithModifier.sol\":1288:1295  toVoter */\n      dup5\n        /* \"Learn/BallotWithModifier.sol\":1281:1296  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Learn/BallotWithModifier.sol\":1281:1302  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n        /* \"Learn/BallotWithModifier.sol\":1281:1310  voters[toVoter].voted = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learn/BallotWithModifier.sol\":1343:1353  30 seconds */\n      0x1e\n        /* \"Learn/BallotWithModifier.sol\":1332:1341  startTime */\n      sload(0x3)\n        /* \"Learn/BallotWithModifier.sol\":1332:1353  startTime+ 30 seconds */\n      add\n        /* \"Learn/BallotWithModifier.sol\":1325:1328  now */\n      timestamp\n        /* \"Learn/BallotWithModifier.sol\":1325:1354  now > (startTime+ 30 seconds) */\n      gt\n        /* \"Learn/BallotWithModifier.sol\":1321:1378  if (now > (startTime+ 30 seconds)) {stage = Stage.Vote; } */\n      iszero\n      tag_26\n      jumpi\n        /* \"Learn/BallotWithModifier.sol\":1365:1375  Stage.Vote */\n      0x2\n        /* \"Learn/BallotWithModifier.sol\":1357:1362  stage */\n      0x0\n      dup1\n        /* \"Learn/BallotWithModifier.sol\":1357:1375  stage = Stage.Vote */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      invalid\n    tag_27:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learn/BallotWithModifier.sol\":1321:1378  if (now > (startTime+ 30 seconds)) {stage = Stage.Vote; } */\n    tag_26:\n        /* \"Learn/BallotWithModifier.sol\":584:585  _ */\n    tag_23:\n        /* \"Learn/BallotWithModifier.sol\":1051:1393  function register(address toVoter) public validStage(Stage.Reg) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Learn/BallotWithModifier.sol\":1932:2411  function winningProposal() public validStage(Stage.Done) constant returns (uint8 _winningProposal) {\r... */\n    tag_11:\n        /* \"Learn/BallotWithModifier.sol\":2007:2029  uint8 _winningProposal */\n      0x0\n        /* \"Learn/BallotWithModifier.sol\":2086:2110  uint256 winningVoteCount */\n      dup1\n        /* \"Learn/BallotWithModifier.sol\":2130:2140  uint8 prop */\n      0x0\n        /* \"Learn/BallotWithModifier.sol\":1977:1987  Stage.Done */\n      0x3\n        /* \"Learn/BallotWithModifier.sol\":566:574  reqStage */\n      dup1\n        /* \"Learn/BallotWithModifier.sol\":557:574  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n        /* \"Learn/BallotWithModifier.sol\":557:562  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learn/BallotWithModifier.sol\":557:574  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n      eq\n        /* \"Learn/BallotWithModifier.sol\":549:575  require(stage == reqStage) */\n      iszero\n      iszero\n      tag_31\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_31:\n        /* \"Learn/BallotWithModifier.sol\":2113:2114  0 */\n      0x0\n        /* \"Learn/BallotWithModifier.sol\":2086:2114  uint256 winningVoteCount = 0 */\n      swap3\n      pop\n        /* \"Learn/BallotWithModifier.sol\":2143:2144  0 */\n      0x0\n        /* \"Learn/BallotWithModifier.sol\":2130:2144  uint8 prop = 0 */\n      swap2\n      pop\n        /* \"Learn/BallotWithModifier.sol\":2125:2363  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n    tag_33:\n        /* \"Learn/BallotWithModifier.sol\":2153:2162  proposals */\n      0x2\n        /* \"Learn/BallotWithModifier.sol\":2153:2169  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Learn/BallotWithModifier.sol\":2146:2150  prop */\n      dup3\n        /* \"Learn/BallotWithModifier.sol\":2146:2169  prop < proposals.length */\n      0xff\n      and\n      lt\n        /* \"Learn/BallotWithModifier.sol\":2125:2363  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      iszero\n      tag_34\n      jumpi\n        /* \"Learn/BallotWithModifier.sol\":2224:2240  winningVoteCount */\n      dup3\n        /* \"Learn/BallotWithModifier.sol\":2196:2205  proposals */\n      0x2\n        /* \"Learn/BallotWithModifier.sol\":2206:2210  prop */\n      dup4\n        /* \"Learn/BallotWithModifier.sol\":2196:2211  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      add\n        /* \"Learn/BallotWithModifier.sol\":2196:2221  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"Learn/BallotWithModifier.sol\":2196:2240  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"Learn/BallotWithModifier.sol\":2192:2363  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n      iszero\n      tag_38\n      jumpi\n        /* \"Learn/BallotWithModifier.sol\":2280:2289  proposals */\n      0x2\n        /* \"Learn/BallotWithModifier.sol\":2290:2294  prop */\n      dup3\n        /* \"Learn/BallotWithModifier.sol\":2280:2295  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      add\n        /* \"Learn/BallotWithModifier.sol\":2280:2305  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"Learn/BallotWithModifier.sol\":2261:2305  winningVoteCount = proposals[prop].voteCount */\n      swap3\n      pop\n        /* \"Learn/BallotWithModifier.sol\":2343:2347  prop */\n      dup2\n        /* \"Learn/BallotWithModifier.sol\":2324:2347  _winningProposal = prop */\n      swap4\n      pop\n        /* \"Learn/BallotWithModifier.sol\":2192:2363  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n    tag_38:\n        /* \"Learn/BallotWithModifier.sol\":2171:2177  prop++ */\n      dup2\n      dup1\n      0x1\n      add\n      swap3\n      pop\n      pop\n        /* \"Learn/BallotWithModifier.sol\":2125:2363  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      jump(tag_33)\n    tag_34:\n        /* \"Learn/BallotWithModifier.sol\":2399:2400  0 */\n      0x0\n        /* \"Learn/BallotWithModifier.sol\":2380:2396  winningVoteCount */\n      dup4\n        /* \"Learn/BallotWithModifier.sol\":2380:2400  winningVoteCount > 0 */\n      gt\n        /* \"Learn/BallotWithModifier.sol\":2372:2401  assert (winningVoteCount > 0) */\n      iszero\n      iszero\n      tag_41\n      jumpi\n      invalid\n    tag_41:\n        /* \"Learn/BallotWithModifier.sol\":1932:2411  function winningProposal() public validStage(Stage.Done) constant returns (uint8 _winningProposal) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"Learn/BallotWithModifier.sol\":1456:1924  function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r... */\n    tag_14:\n        /* \"Learn/BallotWithModifier.sol\":1576:1596  Voter storage sender */\n      0x0\n        /* \"Learn/BallotWithModifier.sol\":1506:1516  Stage.Vote */\n      0x2\n        /* \"Learn/BallotWithModifier.sol\":566:574  reqStage */\n      dup1\n        /* \"Learn/BallotWithModifier.sol\":557:574  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_43\n      jumpi\n      invalid\n    tag_43:\n        /* \"Learn/BallotWithModifier.sol\":557:562  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learn/BallotWithModifier.sol\":557:574  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_44\n      jumpi\n      invalid\n    tag_44:\n      eq\n        /* \"Learn/BallotWithModifier.sol\":549:575  require(stage == reqStage) */\n      iszero\n      iszero\n      tag_45\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_45:\n        /* \"Learn/BallotWithModifier.sol\":1599:1605  voters */\n      0x1\n        /* \"Learn/BallotWithModifier.sol\":1599:1617  voters[msg.sender] */\n      0x0\n        /* \"Learn/BallotWithModifier.sol\":1606:1616  msg.sender */\n      caller\n        /* \"Learn/BallotWithModifier.sol\":1599:1617  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Learn/BallotWithModifier.sol\":1576:1617  Voter storage sender = voters[msg.sender] */\n      swap2\n      pop\n        /* \"Learn/BallotWithModifier.sol\":1632:1638  sender */\n      dup2\n        /* \"Learn/BallotWithModifier.sol\":1632:1644  sender.voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learn/BallotWithModifier.sol\":1632:1678  sender.voted || toProposal >= proposals.length */\n      dup1\n      tag_47\n      jumpi\n      pop\n        /* \"Learn/BallotWithModifier.sol\":1662:1671  proposals */\n      0x2\n        /* \"Learn/BallotWithModifier.sol\":1662:1678  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Learn/BallotWithModifier.sol\":1648:1658  toProposal */\n      dup4\n        /* \"Learn/BallotWithModifier.sol\":1648:1678  toProposal >= proposals.length */\n      0xff\n      and\n      lt\n      iszero\n        /* \"Learn/BallotWithModifier.sol\":1632:1678  sender.voted || toProposal >= proposals.length */\n    tag_47:\n        /* \"Learn/BallotWithModifier.sol\":1628:1687  if (sender.voted || toProposal >= proposals.length) return; */\n      iszero\n      tag_48\n      jumpi\n        /* \"Learn/BallotWithModifier.sol\":1680:1687  return; */\n      jump(tag_46)\n        /* \"Learn/BallotWithModifier.sol\":1628:1687  if (sender.voted || toProposal >= proposals.length) return; */\n    tag_48:\n        /* \"Learn/BallotWithModifier.sol\":1712:1716  true */\n      0x1\n        /* \"Learn/BallotWithModifier.sol\":1697:1703  sender */\n      dup3\n        /* \"Learn/BallotWithModifier.sol\":1697:1709  sender.voted */\n      0x1\n      add\n      0x0\n        /* \"Learn/BallotWithModifier.sol\":1697:1716  sender.voted = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learn/BallotWithModifier.sol\":1741:1751  toProposal */\n      dup3\n        /* \"Learn/BallotWithModifier.sol\":1727:1733  sender */\n      dup3\n        /* \"Learn/BallotWithModifier.sol\":1727:1738  sender.vote */\n      0x1\n      add\n      0x1\n        /* \"Learn/BallotWithModifier.sol\":1727:1751  sender.vote = toProposal */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learn/BallotWithModifier.sol\":1800:1806  sender */\n      dup2\n        /* \"Learn/BallotWithModifier.sol\":1800:1813  sender.weight */\n      0x0\n      add\n      sload\n        /* \"Learn/BallotWithModifier.sol\":1765:1774  proposals */\n      0x2\n        /* \"Learn/BallotWithModifier.sol\":1775:1785  toProposal */\n      dup5\n        /* \"Learn/BallotWithModifier.sol\":1765:1786  proposals[toProposal] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_49\n      jumpi\n      invalid\n    tag_49:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      add\n        /* \"Learn/BallotWithModifier.sol\":1765:1796  proposals[toProposal].voteCount */\n      0x0\n      add\n      0x0\n        /* \"Learn/BallotWithModifier.sol\":1765:1813  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Learn/BallotWithModifier.sol\":1846:1856  30 seconds */\n      0x1e\n        /* \"Learn/BallotWithModifier.sol\":1835:1844  startTime */\n      sload(0x3)\n        /* \"Learn/BallotWithModifier.sol\":1835:1856  startTime+ 30 seconds */\n      add\n        /* \"Learn/BallotWithModifier.sol\":1828:1831  now */\n      timestamp\n        /* \"Learn/BallotWithModifier.sol\":1828:1857  now > (startTime+ 30 seconds) */\n      gt\n        /* \"Learn/BallotWithModifier.sol\":1824:1899  if (now > (startTime+ 30 seconds)) {stage = Stage.Done; votingCompleted();} */\n      iszero\n      tag_51\n      jumpi\n        /* \"Learn/BallotWithModifier.sol\":1868:1878  Stage.Done */\n      0x3\n        /* \"Learn/BallotWithModifier.sol\":1860:1865  stage */\n      0x0\n      dup1\n        /* \"Learn/BallotWithModifier.sol\":1860:1878  stage = Stage.Done */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_52\n      jumpi\n      invalid\n    tag_52:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learn/BallotWithModifier.sol\":1880:1897  votingCompleted() */\n      0x6ac0c89219f0135e3a87cecdf1851abced71da933a0a00e1eada0ef035382351\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Learn/BallotWithModifier.sol\":1824:1899  if (now > (startTime+ 30 seconds)) {stage = Stage.Done; votingCompleted();} */\n    tag_51:\n        /* \"Learn/BallotWithModifier.sol\":584:585  _ */\n    tag_46:\n        /* \"Learn/BallotWithModifier.sol\":1456:1924  function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Learn/BallotWithModifier.sol\":295:326  Stage public stage = Stage.Init */\n    tag_17:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820bce0a02a90ff262be79c72e672a1f1d9305d568428382d1fcb9f4ee0461742220029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "606060405260008060006101000a81548160ff0219169083600381111561002257fe5b0217905550341561003257600080fd5b6040516020806106f18339810160405280805190602001909190505033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508060ff16600281610109919061013a565b5060016000806101000a81548160ff0219169083600381111561012857fe5b0217905550426003819055505061018d565b815481835581811511610161578183600052602060002091820191016101609190610166565b5b505050565b61018a91905b80821115610186576000808201600090555060010161016c565b5090565b90565b6105558061019c6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e4861461005e578063609ff1bd14610097578063b3f98adc146100c6578063c040e6b8146100ec57600080fd5b341561006957600080fd5b610095600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610123565b005b34156100a257600080fd5b6100aa6102e2565b604051808260ff1660ff16815260200191505060405180910390f35b34156100d157600080fd5b6100ea600480803560ff169060200190919050506103a2565b005b34156100f757600080fd5b6100ff610517565b6040518082600381111561010f57fe5b60ff16815260200191505060405180910390f35b600180600381111561013157fe5b6000809054906101000a900460ff16600381111561014b57fe5b14151561015757600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806102005750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561020a576102de565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550601e600354014211156102dd5760026000806101000a81548160ff021916908360038111156102d757fe5b02179055505b5b5050565b600080600060038060038111156102f557fe5b6000809054906101000a900460ff16600381111561030f57fe5b14151561031b57600080fd5b60009250600091505b6002805490508260ff161015610390578260028360ff1681548110151561034757fe5b90600052602060002090016000015411156103835760028260ff1681548110151561036e57fe5b90600052602060002090016000015492508193505b8180600101925050610324565b60008311151561039c57fe5b50505090565b600060028060038111156103b257fe5b6000809054906101000a900460ff1660038111156103cc57fe5b1415156103d857600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091508160010160009054906101000a900460ff168061043e57506002805490508360ff1610155b1561044857610512565b60018260010160006101000a81548160ff021916908315150217905550828260010160016101000a81548160ff021916908360ff160217905550816000015460028460ff1681548110151561049957fe5b906000526020600020900160000160008282540192505081905550601e600354014211156105115760036000806101000a81548160ff021916908360038111156104df57fe5b02179055507f6ac0c89219f0135e3a87cecdf1851abced71da933a0a00e1eada0ef03538235160405160405180910390a15b5b505050565b6000809054906101000a900460ff16815600a165627a7a72305820bce0a02a90ff262be79c72e672a1f1d9305d568428382d1fcb9f4ee0461742220029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE ISZERO PUSH2 0x32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x6F1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x13A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x128 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0x18D JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 0x161 JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x166 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x18A SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x16C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x555 DUP1 PUSH2 0x19C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x123 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x3A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10F JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x131 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14B JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x200 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x20A JUMPI PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x2DD JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2D7 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F5 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x30F JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x390 JUMPI DUP3 PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x347 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x383 JUMPI PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x36E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 ADD SLOAD SWAP3 POP DUP2 SWAP4 POP JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x324 JUMP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO ISZERO PUSH2 0x39C JUMPI INVALID JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B2 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3CC JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP2 POP DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x43E JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x448 JUMPI PUSH2 0x512 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x499 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x511 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4DF JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x6AC0C89219F0135E3A87CECDF1851ABCED71DA933A0A00E1EADA0EF035382351 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xbc 0xe0 LOG0 0x2a SWAP1 SELFDESTRUCT 0x26 0x2b 0xe7 SWAP13 PUSH19 0xE672A1F1D9305D568428382D1FCB9F4EE04617 TIMESTAMP 0x22 STOP 0x29 ",
							"sourceMap": "58:2356:0:-;;;316:10;295:31;;;;;;;;;;;;;;;;;;;;;;;;;;675:262;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;745:10;731:11;;:24;;;;;;;;;;;;;;;;;;795:1;766:6;:19;773:11;;;;;;;;;;;766:19;;;;;;;;;;;;;;;:26;;:30;;;;862:13;843:32;;:9;:32;;;;;:::i;:::-;;894:9;886:5;;:17;;;;;;;;;;;;;;;;;;;;;;;;926:3;914:9;:15;;;;675:262;58:2356;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e4861461005e578063609ff1bd14610097578063b3f98adc146100c6578063c040e6b8146100ec57600080fd5b341561006957600080fd5b610095600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610123565b005b34156100a257600080fd5b6100aa6102e2565b604051808260ff1660ff16815260200191505060405180910390f35b34156100d157600080fd5b6100ea600480803560ff169060200190919050506103a2565b005b34156100f757600080fd5b6100ff610517565b6040518082600381111561010f57fe5b60ff16815260200191505060405180910390f35b600180600381111561013157fe5b6000809054906101000a900460ff16600381111561014b57fe5b14151561015757600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806102005750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561020a576102de565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550601e600354014211156102dd5760026000806101000a81548160ff021916908360038111156102d757fe5b02179055505b5b5050565b600080600060038060038111156102f557fe5b6000809054906101000a900460ff16600381111561030f57fe5b14151561031b57600080fd5b60009250600091505b6002805490508260ff161015610390578260028360ff1681548110151561034757fe5b90600052602060002090016000015411156103835760028260ff1681548110151561036e57fe5b90600052602060002090016000015492508193505b8180600101925050610324565b60008311151561039c57fe5b50505090565b600060028060038111156103b257fe5b6000809054906101000a900460ff1660038111156103cc57fe5b1415156103d857600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091508160010160009054906101000a900460ff168061043e57506002805490508360ff1610155b1561044857610512565b60018260010160006101000a81548160ff021916908315150217905550828260010160016101000a81548160ff021916908360ff160217905550816000015460028460ff1681548110151561049957fe5b906000526020600020900160000160008282540192505081905550601e600354014211156105115760036000806101000a81548160ff021916908360038111156104df57fe5b02179055507f6ac0c89219f0135e3a87cecdf1851abced71da933a0a00e1eada0ef03538235160405160405180910390a15b5b505050565b6000809054906101000a900460ff16815600a165627a7a72305820bce0a02a90ff262be79c72e672a1f1d9305d568428382d1fcb9f4ee0461742220029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x123 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x3A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10F JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x131 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14B JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x200 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x20A JUMPI PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x2DD JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2D7 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F5 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x30F JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x390 JUMPI DUP3 PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x347 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x383 JUMPI PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x36E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 ADD SLOAD SWAP3 POP DUP2 SWAP4 POP JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x324 JUMP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO ISZERO PUSH2 0x39C JUMPI INVALID JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B2 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3CC JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP2 POP DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x43E JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x448 JUMPI PUSH2 0x512 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x499 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x511 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4DF JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x6AC0C89219F0135E3A87CECDF1851ABCED71DA933A0A00E1EADA0EF035382351 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xbc 0xe0 LOG0 0x2a SWAP1 SELFDESTRUCT 0x26 0x2b 0xe7 SWAP13 PUSH19 0xE672A1F1D9305D568428382D1FCB9F4EE04617 TIMESTAMP 0x22 STOP 0x29 ",
							"sourceMap": "58:2356:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1051:342;;;;;;;;;;;;;;;;;;;;;;;;;;;;1932:479;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1456:468;;;;;;;;;;;;;;;;;;;;;;;;;;;;295:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1051:342;1104:9;566:8;557:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;549:26;;;;;;;;1189:11;;;;;;;;;;;1175:25;;:10;:25;;;;:50;;;;1204:6;:15;1211:7;1204:15;;;;;;;;;;;;;;;:21;;;;;;;;;;;;1175:50;1171:63;;;1227:7;;1171:63;1269:1;1244:6;:15;1251:7;1244:15;;;;;;;;;;;;;;;:22;;:26;;;;1305:5;1281:6;:15;1288:7;1281:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;1343:10;1332:9;;:21;1325:3;:29;1321:57;;;1365:10;1357:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1321:57;584:1;1051:342;;:::o;1932:479::-;2007:22;2086:24;2130:10;1977;566:8;557:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;549:26;;;;;;;;2113:1;2086:28;;2143:1;2130:14;;2125:238;2153:9;:16;;;;2146:4;:23;;;2125:238;;;2224:16;2196:9;2206:4;2196:15;;;;;;;;;;;;;;;;;;;;:25;;;:44;2192:171;;;2280:9;2290:4;2280:15;;;;;;;;;;;;;;;;;;;;:25;;;2261:44;;2343:4;2324:23;;2192:171;2171:6;;;;;;;2125:238;;;2399:1;2380:16;:20;2372:29;;;;;;1932:479;;;;:::o;1456:468::-;1576:20;1506:10;566:8;557:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;549:26;;;;;;;;1599:6;:18;1606:10;1599:18;;;;;;;;;;;;;;;1576:41;;1632:6;:12;;;;;;;;;;;;:46;;;;1662:9;:16;;;;1648:10;:30;;;;1632:46;1628:59;;;1680:7;;1628:59;1712:4;1697:6;:12;;;:19;;;;;;;;;;;;;;;;;;1741:10;1727:6;:11;;;:24;;;;;;;;;;;;;;;;;;1800:6;:13;;;1765:9;1775:10;1765:21;;;;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;1846:10;1835:9;;:21;1828:3;:29;1824:75;;;1868:10;1860:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1880:17;;;;;;;;;;1824:75;584:1;1456:468;;;:::o;295:31::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "273000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"register(address)": "62143",
								"stage()": "499",
								"vote(uint8)": "83756",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "MSTORE"
								},
								{
									"begin": 316,
									"end": 326,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "DUP1"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "EXP"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "SLOAD"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "MUL"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "NOT"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "AND"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "SWAP1"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "DUP4"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "GT"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "ISZERO"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "JUMPI"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "INVALID"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "JUMPDEST"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "MUL"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "OR"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "SWAP1"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "SSTORE"
								},
								{
									"begin": 295,
									"end": 326,
									"name": "POP"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "CALLVALUE"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "ISZERO"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "JUMPI"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "DUP1"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "REVERT"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "JUMPDEST"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "MLOAD"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "DUP1"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "PUSHSIZE"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "DUP4"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "CODECOPY"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "DUP2"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "ADD"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "MSTORE"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "DUP1"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "DUP1"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "MLOAD"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "SWAP1"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "ADD"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "SWAP1"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "SWAP2"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "SWAP1"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "POP"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "POP"
								},
								{
									"begin": 745,
									"end": 755,
									"name": "CALLER"
								},
								{
									"begin": 731,
									"end": 742,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 731,
									"end": 742,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "EXP"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "DUP2"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "SLOAD"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "DUP2"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "MUL"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "NOT"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "AND"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "SWAP1"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "DUP4"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "AND"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "MUL"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "OR"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "SWAP1"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "SSTORE"
								},
								{
									"begin": 731,
									"end": 755,
									"name": "POP"
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 766,
									"end": 772,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 773,
									"end": 784,
									"name": "DUP1"
								},
								{
									"begin": 773,
									"end": 784,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 773,
									"end": 784,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 784,
									"name": "SLOAD"
								},
								{
									"begin": 773,
									"end": 784,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 784,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 773,
									"end": 784,
									"name": "EXP"
								},
								{
									"begin": 773,
									"end": 784,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 784,
									"name": "DIV"
								},
								{
									"begin": 773,
									"end": 784,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 773,
									"end": 784,
									"name": "AND"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "AND"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "AND"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "DUP2"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "MSTORE"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "ADD"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "SWAP1"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "DUP2"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "MSTORE"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "ADD"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "KECCAK256"
								},
								{
									"begin": 766,
									"end": 792,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 766,
									"end": 792,
									"name": "ADD"
								},
								{
									"begin": 766,
									"end": 796,
									"name": "DUP2"
								},
								{
									"begin": 766,
									"end": 796,
									"name": "SWAP1"
								},
								{
									"begin": 766,
									"end": 796,
									"name": "SSTORE"
								},
								{
									"begin": 766,
									"end": 796,
									"name": "POP"
								},
								{
									"begin": 862,
									"end": 875,
									"name": "DUP1"
								},
								{
									"begin": 843,
									"end": 875,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 843,
									"end": 875,
									"name": "AND"
								},
								{
									"begin": 843,
									"end": 852,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 843,
									"end": 875,
									"name": "DUP2"
								},
								{
									"begin": 843,
									"end": 875,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 843,
									"end": 875,
									"name": "SWAP2"
								},
								{
									"begin": 843,
									"end": 875,
									"name": "SWAP1"
								},
								{
									"begin": 843,
									"end": 875,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 843,
									"end": 875,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 843,
									"end": 875,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 843,
									"end": 875,
									"name": "JUMPDEST"
								},
								{
									"begin": 843,
									"end": 875,
									"name": "POP"
								},
								{
									"begin": 894,
									"end": 903,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 886,
									"end": 891,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 886,
									"end": 891,
									"name": "DUP1"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "EXP"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "DUP2"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "SLOAD"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "DUP2"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "MUL"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "NOT"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "AND"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "SWAP1"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "DUP4"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "DUP2"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "GT"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "ISZERO"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "JUMPI"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "INVALID"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "JUMPDEST"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "MUL"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "OR"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "SWAP1"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "SSTORE"
								},
								{
									"begin": 886,
									"end": 903,
									"name": "POP"
								},
								{
									"begin": 926,
									"end": 929,
									"name": "TIMESTAMP"
								},
								{
									"begin": 914,
									"end": 923,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 914,
									"end": 929,
									"name": "DUP2"
								},
								{
									"begin": 914,
									"end": 929,
									"name": "SWAP1"
								},
								{
									"begin": 914,
									"end": 929,
									"name": "SSTORE"
								},
								{
									"begin": 914,
									"end": 929,
									"name": "POP"
								},
								{
									"begin": 675,
									"end": 937,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMP"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "SLOAD"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "DUP4"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "SSTORE"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "ISZERO"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "GT"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMPI"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "DUP4"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "MSTORE"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "KECCAK256"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "DUP3"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "DUP3"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "GT"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "ISZERO"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMPI"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "DUP3"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "SSTORE"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMP"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMP"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "CODECOPY"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2414,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820bce0a02a90ff262be79c72e672a1f1d9305d568428382d1fcb9f4ee0461742220029",
									".code": [
										{
											"begin": 58,
											"end": 2414,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "MSTORE"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "DIV"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "AND"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "PUSH",
											"value": "609FF1BD"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "PUSH",
											"value": "B3F98ADC"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "PUSH",
											"value": "C040E6B8"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 2414,
											"name": "REVERT"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "JUMPDEST"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "CALLVALUE"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "ISZERO"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "JUMPI"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "DUP1"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "REVERT"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "JUMPDEST"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "DUP1"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "DUP1"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "AND"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "SWAP1"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "ADD"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "SWAP1"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "SWAP2"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "SWAP1"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "POP"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "POP"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "JUMP"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "JUMPDEST"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "STOP"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "JUMPDEST"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "CALLVALUE"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "ISZERO"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "JUMPI"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "DUP1"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "REVERT"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "JUMPDEST"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "JUMP"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "JUMPDEST"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "MLOAD"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "DUP1"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "DUP3"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "AND"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "AND"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "DUP2"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "MSTORE"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "ADD"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "SWAP2"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "POP"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "POP"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "MLOAD"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "DUP1"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "SWAP2"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "SUB"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "SWAP1"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "RETURN"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "JUMPDEST"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "CALLVALUE"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "JUMPDEST"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "AND"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "SWAP1"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "ADD"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "SWAP1"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "SWAP2"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "SWAP1"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "POP"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "POP"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "JUMP"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "JUMPDEST"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "STOP"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "CALLVALUE"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "ISZERO"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "REVERT"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "JUMP"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "GT"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "ISZERO"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "INVALID"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "AND"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "SWAP2"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "SWAP2"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "RETURN"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "JUMPDEST"
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 566,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "GT"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "ISZERO"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "JUMPI"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "INVALID"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "SLOAD"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "EXP"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "DIV"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "AND"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "GT"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "ISZERO"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "JUMPI"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "INVALID"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "EQ"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "ISZERO"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "ISZERO"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPI"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP1"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "REVERT"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "SWAP1"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "SLOAD"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "SWAP1"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "EXP"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "SWAP1"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "DIV"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "AND"
										},
										{
											"begin": 1175,
											"end": 1200,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1175,
											"end": 1200,
											"name": "AND"
										},
										{
											"begin": 1175,
											"end": 1185,
											"name": "CALLER"
										},
										{
											"begin": 1175,
											"end": 1200,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1175,
											"end": 1200,
											"name": "AND"
										},
										{
											"begin": 1175,
											"end": 1200,
											"name": "EQ"
										},
										{
											"begin": 1175,
											"end": 1200,
											"name": "ISZERO"
										},
										{
											"begin": 1175,
											"end": 1225,
											"name": "DUP1"
										},
										{
											"begin": 1175,
											"end": 1225,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1175,
											"end": 1225,
											"name": "JUMPI"
										},
										{
											"begin": 1175,
											"end": 1225,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1218,
											"name": "DUP4"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "AND"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "AND"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "DUP2"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "MSTORE"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "ADD"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "SWAP1"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "DUP2"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "MSTORE"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "ADD"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "KECCAK256"
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "ADD"
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "SWAP1"
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "SLOAD"
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "SWAP1"
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "EXP"
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "SWAP1"
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "DIV"
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "AND"
										},
										{
											"begin": 1175,
											"end": 1225,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1175,
											"end": 1225,
											"name": "JUMPDEST"
										},
										{
											"begin": 1171,
											"end": 1234,
											"name": "ISZERO"
										},
										{
											"begin": 1171,
											"end": 1234,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1171,
											"end": 1234,
											"name": "JUMPI"
										},
										{
											"begin": 1227,
											"end": 1234,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1227,
											"end": 1234,
											"name": "JUMP"
										},
										{
											"begin": 1171,
											"end": 1234,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1171,
											"end": 1234,
											"name": "JUMPDEST"
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DUP1"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1258,
											"name": "DUP5"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "AND"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "AND"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "DUP2"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "MSTORE"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "ADD"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "SWAP1"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "DUP2"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "MSTORE"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "ADD"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1259,
											"name": "KECCAK256"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "ADD"
										},
										{
											"begin": 1244,
											"end": 1270,
											"name": "DUP2"
										},
										{
											"begin": 1244,
											"end": 1270,
											"name": "SWAP1"
										},
										{
											"begin": 1244,
											"end": 1270,
											"name": "SSTORE"
										},
										{
											"begin": 1244,
											"end": 1270,
											"name": "POP"
										},
										{
											"begin": 1305,
											"end": 1310,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "DUP5"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "AND"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "AND"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "DUP2"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "MSTORE"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "ADD"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "SWAP1"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "DUP2"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "MSTORE"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "ADD"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1296,
											"name": "KECCAK256"
										},
										{
											"begin": 1281,
											"end": 1302,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1281,
											"end": 1302,
											"name": "ADD"
										},
										{
											"begin": 1281,
											"end": 1302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "EXP"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "DUP2"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "SLOAD"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "DUP2"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "MUL"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "NOT"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "AND"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "SWAP1"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "DUP4"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "ISZERO"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "ISZERO"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "MUL"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "OR"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "SWAP1"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "SSTORE"
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "POP"
										},
										{
											"begin": 1343,
											"end": 1353,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "SLOAD"
										},
										{
											"begin": 1332,
											"end": 1353,
											"name": "ADD"
										},
										{
											"begin": 1325,
											"end": 1328,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1325,
											"end": 1354,
											"name": "GT"
										},
										{
											"begin": 1321,
											"end": 1378,
											"name": "ISZERO"
										},
										{
											"begin": 1321,
											"end": 1378,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1321,
											"end": 1378,
											"name": "JUMPI"
										},
										{
											"begin": 1365,
											"end": 1375,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1357,
											"end": 1362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1357,
											"end": 1362,
											"name": "DUP1"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "EXP"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "DUP2"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "SLOAD"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "DUP2"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "MUL"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "NOT"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "AND"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "SWAP1"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "DUP4"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "DUP2"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "GT"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "ISZERO"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "JUMPI"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "INVALID"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "JUMPDEST"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "MUL"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "OR"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "SWAP1"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "SSTORE"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "POP"
										},
										{
											"begin": 1321,
											"end": 1378,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1321,
											"end": 1378,
											"name": "JUMPDEST"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "JUMPDEST"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "POP"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "POP"
										},
										{
											"begin": 1051,
											"end": 1393,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "JUMPDEST"
										},
										{
											"begin": 2007,
											"end": 2029,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2110,
											"name": "DUP1"
										},
										{
											"begin": 2130,
											"end": 2140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 566,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "GT"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "ISZERO"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "JUMPI"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "INVALID"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "SLOAD"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "EXP"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "DIV"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "AND"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "GT"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "ISZERO"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "JUMPI"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "INVALID"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "EQ"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "ISZERO"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "ISZERO"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPI"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP1"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "REVERT"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST"
										},
										{
											"begin": 2113,
											"end": 2114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2114,
											"name": "SWAP3"
										},
										{
											"begin": 2086,
											"end": 2114,
											"name": "POP"
										},
										{
											"begin": 2143,
											"end": 2144,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2144,
											"name": "SWAP2"
										},
										{
											"begin": 2130,
											"end": 2144,
											"name": "POP"
										},
										{
											"begin": 2125,
											"end": 2363,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2125,
											"end": 2363,
											"name": "JUMPDEST"
										},
										{
											"begin": 2153,
											"end": 2162,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2153,
											"end": 2169,
											"name": "DUP1"
										},
										{
											"begin": 2153,
											"end": 2169,
											"name": "SLOAD"
										},
										{
											"begin": 2153,
											"end": 2169,
											"name": "SWAP1"
										},
										{
											"begin": 2153,
											"end": 2169,
											"name": "POP"
										},
										{
											"begin": 2146,
											"end": 2150,
											"name": "DUP3"
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "AND"
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "LT"
										},
										{
											"begin": 2125,
											"end": 2363,
											"name": "ISZERO"
										},
										{
											"begin": 2125,
											"end": 2363,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2125,
											"end": 2363,
											"name": "JUMPI"
										},
										{
											"begin": 2224,
											"end": 2240,
											"name": "DUP3"
										},
										{
											"begin": 2196,
											"end": 2205,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2206,
											"end": 2210,
											"name": "DUP4"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "AND"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "DUP2"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "SLOAD"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "DUP2"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "LT"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "ISZERO"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "ISZERO"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "JUMPI"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "INVALID"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "JUMPDEST"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "SWAP1"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "MSTORE"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "KECCAK256"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "SWAP1"
										},
										{
											"begin": 2196,
											"end": 2211,
											"name": "ADD"
										},
										{
											"begin": 2196,
											"end": 2221,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2221,
											"name": "ADD"
										},
										{
											"begin": 2196,
											"end": 2221,
											"name": "SLOAD"
										},
										{
											"begin": 2196,
											"end": 2240,
											"name": "GT"
										},
										{
											"begin": 2192,
											"end": 2363,
											"name": "ISZERO"
										},
										{
											"begin": 2192,
											"end": 2363,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2192,
											"end": 2363,
											"name": "JUMPI"
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "DUP3"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "AND"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "DUP2"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "SLOAD"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "DUP2"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "LT"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "ISZERO"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "ISZERO"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "JUMPI"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "INVALID"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "JUMPDEST"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "SWAP1"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "MSTORE"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "KECCAK256"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "SWAP1"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "ADD"
										},
										{
											"begin": 2280,
											"end": 2305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2305,
											"name": "ADD"
										},
										{
											"begin": 2280,
											"end": 2305,
											"name": "SLOAD"
										},
										{
											"begin": 2261,
											"end": 2305,
											"name": "SWAP3"
										},
										{
											"begin": 2261,
											"end": 2305,
											"name": "POP"
										},
										{
											"begin": 2343,
											"end": 2347,
											"name": "DUP2"
										},
										{
											"begin": 2324,
											"end": 2347,
											"name": "SWAP4"
										},
										{
											"begin": 2324,
											"end": 2347,
											"name": "POP"
										},
										{
											"begin": 2192,
											"end": 2363,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2192,
											"end": 2363,
											"name": "JUMPDEST"
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "DUP2"
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "DUP1"
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "ADD"
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "SWAP3"
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "POP"
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "POP"
										},
										{
											"begin": 2125,
											"end": 2363,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2125,
											"end": 2363,
											"name": "JUMP"
										},
										{
											"begin": 2125,
											"end": 2363,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2125,
											"end": 2363,
											"name": "JUMPDEST"
										},
										{
											"begin": 2399,
											"end": 2400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2396,
											"name": "DUP4"
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "GT"
										},
										{
											"begin": 2372,
											"end": 2401,
											"name": "ISZERO"
										},
										{
											"begin": 2372,
											"end": 2401,
											"name": "ISZERO"
										},
										{
											"begin": 2372,
											"end": 2401,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2372,
											"end": 2401,
											"name": "JUMPI"
										},
										{
											"begin": 2372,
											"end": 2401,
											"name": "INVALID"
										},
										{
											"begin": 2372,
											"end": 2401,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2372,
											"end": 2401,
											"name": "JUMPDEST"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "POP"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "POP"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "POP"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "SWAP1"
										},
										{
											"begin": 1932,
											"end": 2411,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "JUMPDEST"
										},
										{
											"begin": 1576,
											"end": 1596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1516,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 566,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "GT"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "ISZERO"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "JUMPI"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "INVALID"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "SLOAD"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "EXP"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "DIV"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "AND"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "GT"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "ISZERO"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "JUMPI"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "INVALID"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 574,
											"name": "EQ"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "ISZERO"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "ISZERO"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPI"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP1"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "REVERT"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST"
										},
										{
											"begin": 1599,
											"end": 1605,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1616,
											"name": "CALLER"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "AND"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "AND"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "DUP2"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "MSTORE"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "ADD"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "SWAP1"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "DUP2"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "MSTORE"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "ADD"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "KECCAK256"
										},
										{
											"begin": 1576,
											"end": 1617,
											"name": "SWAP2"
										},
										{
											"begin": 1576,
											"end": 1617,
											"name": "POP"
										},
										{
											"begin": 1632,
											"end": 1638,
											"name": "DUP2"
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "ADD"
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "SWAP1"
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "SLOAD"
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "SWAP1"
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "EXP"
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "SWAP1"
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "DIV"
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "AND"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "DUP1"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "JUMPI"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1662,
											"end": 1678,
											"name": "DUP1"
										},
										{
											"begin": 1662,
											"end": 1678,
											"name": "SLOAD"
										},
										{
											"begin": 1662,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1662,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1648,
											"end": 1658,
											"name": "DUP4"
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "AND"
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "LT"
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "ISZERO"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "JUMPDEST"
										},
										{
											"begin": 1628,
											"end": 1687,
											"name": "ISZERO"
										},
										{
											"begin": 1628,
											"end": 1687,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1628,
											"end": 1687,
											"name": "JUMPI"
										},
										{
											"begin": 1680,
											"end": 1687,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1680,
											"end": 1687,
											"name": "JUMP"
										},
										{
											"begin": 1628,
											"end": 1687,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1628,
											"end": 1687,
											"name": "JUMPDEST"
										},
										{
											"begin": 1712,
											"end": 1716,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3"
										},
										{
											"begin": 1697,
											"end": 1709,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1697,
											"end": 1709,
											"name": "ADD"
										},
										{
											"begin": 1697,
											"end": 1709,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "EXP"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "DUP2"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "SLOAD"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "DUP2"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "MUL"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "NOT"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "AND"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "SWAP1"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "DUP4"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "ISZERO"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "ISZERO"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "MUL"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "OR"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "SWAP1"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "SSTORE"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "POP"
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3"
										},
										{
											"begin": 1727,
											"end": 1733,
											"name": "DUP3"
										},
										{
											"begin": 1727,
											"end": 1738,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1727,
											"end": 1738,
											"name": "ADD"
										},
										{
											"begin": 1727,
											"end": 1738,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "EXP"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "DUP2"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "SLOAD"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "DUP2"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "MUL"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "NOT"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "AND"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "SWAP1"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "DUP4"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "AND"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "MUL"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "OR"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "SWAP1"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "SSTORE"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "POP"
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "DUP2"
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "ADD"
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "SLOAD"
										},
										{
											"begin": 1765,
											"end": 1774,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1775,
											"end": 1785,
											"name": "DUP5"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "AND"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "DUP2"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "SLOAD"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "DUP2"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "LT"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "ISZERO"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "ISZERO"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "JUMPI"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "INVALID"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "JUMPDEST"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "SWAP1"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "MSTORE"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "KECCAK256"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "SWAP1"
										},
										{
											"begin": 1765,
											"end": 1786,
											"name": "ADD"
										},
										{
											"begin": 1765,
											"end": 1796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1796,
											"name": "ADD"
										},
										{
											"begin": 1765,
											"end": 1796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1813,
											"name": "DUP3"
										},
										{
											"begin": 1765,
											"end": 1813,
											"name": "DUP3"
										},
										{
											"begin": 1765,
											"end": 1813,
											"name": "SLOAD"
										},
										{
											"begin": 1765,
											"end": 1813,
											"name": "ADD"
										},
										{
											"begin": 1765,
											"end": 1813,
											"name": "SWAP3"
										},
										{
											"begin": 1765,
											"end": 1813,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1813,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1813,
											"name": "DUP2"
										},
										{
											"begin": 1765,
											"end": 1813,
											"name": "SWAP1"
										},
										{
											"begin": 1765,
											"end": 1813,
											"name": "SSTORE"
										},
										{
											"begin": 1765,
											"end": 1813,
											"name": "POP"
										},
										{
											"begin": 1846,
											"end": 1856,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1835,
											"end": 1844,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1835,
											"end": 1844,
											"name": "SLOAD"
										},
										{
											"begin": 1835,
											"end": 1856,
											"name": "ADD"
										},
										{
											"begin": 1828,
											"end": 1831,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1828,
											"end": 1857,
											"name": "GT"
										},
										{
											"begin": 1824,
											"end": 1899,
											"name": "ISZERO"
										},
										{
											"begin": 1824,
											"end": 1899,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1824,
											"end": 1899,
											"name": "JUMPI"
										},
										{
											"begin": 1868,
											"end": 1878,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1860,
											"end": 1865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1865,
											"name": "DUP1"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "EXP"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "DUP2"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "SLOAD"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "DUP2"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "MUL"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "NOT"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "AND"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "SWAP1"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "DUP4"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "DUP2"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "GT"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "ISZERO"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "JUMPI"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "INVALID"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "JUMPDEST"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "MUL"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "OR"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "SWAP1"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "SSTORE"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "POP"
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "PUSH",
											"value": "6AC0C89219F0135E3A87CECDF1851ABCED71DA933A0A00E1EADA0EF035382351"
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "MLOAD"
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "MLOAD"
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "DUP1"
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "SWAP2"
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "SUB"
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "SWAP1"
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "LOG1"
										},
										{
											"begin": 1824,
											"end": 1899,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1824,
											"end": 1899,
											"name": "JUMPDEST"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "JUMPDEST"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "POP"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "POP"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "POP"
										},
										{
											"begin": 1456,
											"end": 1924,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "SLOAD"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "EXP"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "DIV"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "AND"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 295,
											"end": 326,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486",
							"stage()": "c040e6b8",
							"vote(uint8)": "b3f98adc",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"toVoter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"name\":\"_winningProposal\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toProposal\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_numProposals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"votingCompleted\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"register(address)\":{\"notice\":\"Give $(toVoter) the right to vote on this ballot.\\r May only be called by $(chairperson).\\r\"},\"vote(uint8)\":{\"notice\":\"Give a single vote to proposal $(toProposal).\\r\"}}}},\"settings\":{\"compilationTarget\":{\"Learn/BallotWithModifier.sol\":\"Ballot\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Learn/BallotWithModifier.sol\":{\"keccak256\":\"0x54875ca5b3b337cc2f97aafa90be9db5f61ab3a93227519e644aa49b5ae5a9bf\",\"urls\":[\"bzzr://436c70c3c6ec99b25c5e29d5b36f48f6ddf5407b93675421d98896e9bbd1938d\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"register(address)": {
								"notice": "Give $(toVoter) the right to vote on this ballot.\r May only be called by $(chairperson).\r"
							},
							"vote(uint8)": {
								"notice": "Give a single vote to proposal $(toProposal).\r"
							}
						}
					}
				}
			}
		},
		"sources": {
			"Learn/BallotWithModifier.sol": {
				"ast": {
					"absolutePath": "Learn/BallotWithModifier.sol",
					"exportedSymbols": {
						"Ballot": [
							242
						]
					},
					"id": 243,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "107:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "107:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "129:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "129:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "150:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 6,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "150:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"name": "delegate",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "171:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 8,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "171:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 242,
									"src": "83:112:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 13,
									"members": [
										{
											"constant": false,
											"id": 12,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "228:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "228:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 242,
									"src": "201:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Stage",
									"id": 18,
									"members": [
										{
											"id": 14,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "268:4:0"
										},
										{
											"id": 15,
											"name": "Reg",
											"nodeType": "EnumValue",
											"src": "273:3:0"
										},
										{
											"id": 16,
											"name": "Vote",
											"nodeType": "EnumValue",
											"src": "278:4:0"
										},
										{
											"id": 17,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "284:4:0"
										}
									],
									"name": "Stage",
									"nodeType": "EnumDefinition",
									"src": "256:33:0"
								},
								{
									"constant": false,
									"id": 22,
									"name": "stage",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "295:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Stage_$18",
										"typeString": "enum Ballot.Stage"
									},
									"typeName": {
										"contractScope": null,
										"id": 19,
										"name": "Stage",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 18,
										"src": "295:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$18",
											"typeString": "enum Ballot.Stage"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 20,
											"name": "Stage",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 18,
											"src": "316:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
												"typeString": "type(enum Ballot.Stage)"
											}
										},
										"id": 21,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Init",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "316:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$18",
											"typeString": "enum Ballot.Stage"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "339:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 23,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "339:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 28,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "365:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter storage ref)"
									},
									"typeName": {
										"id": 27,
										"keyType": {
											"id": 25,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "373:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "365:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter storage ref)"
										},
										"valueType": {
											"contractScope": null,
											"id": 26,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 10,
											"src": "384:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
												"typeString": "struct Ballot.Voter storage pointer"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 31,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "404:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal storage ref[] storage ref"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 29,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 13,
											"src": "404:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$13_storage_ptr",
												"typeString": "struct Ballot.Proposal storage pointer"
											}
										},
										"id": 30,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "404:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal storage ref[] storage pointer"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 33,
									"name": "votingCompleted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:2:0"
									},
									"src": "433:24:0"
								},
								{
									"constant": false,
									"id": 35,
									"name": "startTime",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "469:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 34,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "469:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "547:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_Stage_$18",
																"typeString": "enum Ballot.Stage"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 40,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "557:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "reqStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "566:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"src": "557:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 39,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "549:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "549:26:0"
											},
											{
												"id": 45,
												"nodeType": "PlaceholderStatement",
												"src": "584:1:0"
											}
										]
									},
									"id": 47,
									"name": "validStage",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"name": "reqStage",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Stage_$18",
													"typeString": "enum Ballot.Stage"
												},
												"typeName": {
													"contractScope": null,
													"id": 36,
													"name": "Stage",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 18,
													"src": "526:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Ballot.Stage"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "525:16:0"
									},
									"src": "506:87:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "720:217:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 52,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "731:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 53,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "745:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "745:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "731:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "731:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 57,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "766:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 59,
															"indexExpression": {
																"argumentTypes": null,
																"id": 58,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "773:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "766:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 60,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "766:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "795:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "766:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "766:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 64,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "843:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "843:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 67,
														"name": "_numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "862:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "843:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "843:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 70,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "886:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$18",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 71,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "894:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Reg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "894:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$18",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "886:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Ballot.Stage"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "886:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 75,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "914:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 76,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "926:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "914:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "914:15:0"
											}
										]
									},
									"id": 80,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Ballot",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "_numProposals",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "691:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 48,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "691:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "690:21:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "720:0:0"
									},
									"scope": 242,
									"src": "675:262:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "1115:278:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 89,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "1175:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1175:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 91,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "1189:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1175:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 93,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1204:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 95,
															"indexExpression": {
																"argumentTypes": null,
																"id": 94,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1211:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1204:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 96,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1204:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1175:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 99,
												"nodeType": "IfStatement",
												"src": "1171:63:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 88,
													"id": 98,
													"nodeType": "Return",
													"src": "1227:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 100,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1244:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 102,
															"indexExpression": {
																"argumentTypes": null,
																"id": 101,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1251:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1244:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1244:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1269:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1244:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1244:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 107,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1281:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 109,
															"indexExpression": {
																"argumentTypes": null,
																"id": 108,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1288:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1281:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1281:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1305:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1281:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1281:29:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 114,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "1325:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 115,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "1332:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3330",
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1343:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "1332:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 118,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1331:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1325:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 126,
												"nodeType": "IfStatement",
												"src": "1321:57:0",
												"trueBody": {
													"id": 125,
													"nodeType": "Block",
													"src": "1356:22:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 120,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "1357:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$18",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 121,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "1365:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Vote",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1365:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$18",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1357:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 124,
															"nodeType": "ExpressionStatement",
															"src": "1357:18:0"
														}
													]
												}
											}
										]
									},
									"id": 128,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 85,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1104:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Reg",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1104:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 87,
											"modifierName": {
												"argumentTypes": null,
												"id": 84,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 47,
												"src": "1093:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$18_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1093:21:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"name": "toVoter",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1069:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1068:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1115:0:0"
									},
									"scope": 242,
									"src": "1051:342:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1519:405:0",
										"statements": [
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 190,
														"src": "1576:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
															"typeString": "struct Ballot.Voter storage pointer"
														},
														"typeName": {
															"contractScope": null,
															"id": 137,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 10,
															"src": "1576:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 143,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 139,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1599:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 142,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 140,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "1606:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1606:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1599:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$10_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1576:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 144,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1632:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1632:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 146,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "1648:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 147,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "1662:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1662:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1648:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1632:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 152,
												"nodeType": "IfStatement",
												"src": "1628:59:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 136,
													"id": 151,
													"nodeType": "Return",
													"src": "1680:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 153,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1697:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 155,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1697:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1712:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1697:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1697:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 159,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1727:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 161,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1727:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 162,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1741:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1727:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1727:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 165,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "1765:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 167,
															"indexExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1765:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$13_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "1765:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 169,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1800:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1800:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1765:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1765:48:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 173,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "1828:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 174,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "1835:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3330",
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1846:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "1835:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 177,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1834:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1828:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 188,
												"nodeType": "IfStatement",
												"src": "1824:75:0",
												"trueBody": {
													"id": 187,
													"nodeType": "Block",
													"src": "1859:40:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 179,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "1860:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$18",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 180,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "1868:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Done",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1868:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$18",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1860:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 183,
															"nodeType": "ExpressionStatement",
															"src": "1860:18:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 184,
																	"name": "votingCompleted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "1880:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1880:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 186,
															"nodeType": "ExpressionStatement",
															"src": "1880:17:0"
														}
													]
												}
											}
										]
									},
									"id": 190,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 133,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1506:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Vote",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1506:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 135,
											"modifierName": {
												"argumentTypes": null,
												"id": 132,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 47,
												"src": "1495:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$18_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1495:22:0"
										}
									],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1470:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 129,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1469:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:0"
									},
									"scope": 242,
									"src": "1456:468:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "2031:380:0",
										"statements": [
											{
												"assignments": [
													200
												],
												"declarations": [
													{
														"constant": false,
														"id": 200,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"scope": 241,
														"src": "2086:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2113:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2086:28:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 214,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "2196:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage",
																		"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																	}
																},
																"id": 216,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 215,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "2206:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2196:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$13_storage",
																	"typeString": "struct Ballot.Proposal storage ref"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 12,
															"src": "2196:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 218,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "2224:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2196:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 232,
													"nodeType": "IfStatement",
													"src": "2192:171:0",
													"trueBody": {
														"id": 231,
														"nodeType": "Block",
														"src": "2242:121:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 220,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 200,
																		"src": "2261:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 221,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 31,
																				"src": "2280:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage",
																					"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 223,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 222,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 204,
																				"src": "2290:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2280:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$13_storage",
																				"typeString": "struct Ballot.Proposal storage ref"
																			}
																		},
																		"id": 224,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 12,
																		"src": "2280:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2261:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 226,
																"nodeType": "ExpressionStatement",
																"src": "2261:44:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 227,
																		"name": "_winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 197,
																		"src": "2324:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 228,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 204,
																		"src": "2343:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2324:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 230,
																"nodeType": "ExpressionStatement",
																"src": "2324:23:0"
															}
														]
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 207,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2146:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 208,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "2153:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 209,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2153:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2146:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 233,
												"initializationExpression": {
													"assignments": [
														204
													],
													"declarations": [
														{
															"constant": false,
															"id": 204,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 241,
															"src": "2130:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 203,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "2130:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 206,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2143:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2130:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2171:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 211,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "2171:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 213,
													"nodeType": "ExpressionStatement",
													"src": "2171:6:0"
												},
												"nodeType": "ForStatement",
												"src": "2125:238:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 235,
																"name": "winningVoteCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "2380:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2399:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2380:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 234,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "2372:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2372:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "2372:29:0"
											}
										]
									},
									"id": 241,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 193,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1977:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Done",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1977:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 195,
											"modifierName": {
												"argumentTypes": null,
												"id": 192,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 47,
												"src": "1966:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$18_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1966:22:0"
										}
									],
									"name": "winningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1956:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"name": "_winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2007:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 196,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2007:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2006:24:0"
									},
									"scope": 242,
									"src": "1932:479:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 243,
							"src": "58:2356:0"
						}
					],
					"src": "33:2389:0"
				},
				"id": 0,
				"legacyAST": {
					"attributes": {
						"absolutePath": "Learn/BallotWithModifier.sol",
						"exportedSymbols": {
							"Ballot": [
								242
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".0"
								]
							},
							"id": 1,
							"name": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									242
								],
								"name": "Ballot",
								"scope": 243
							},
							"children": [
								{
									"attributes": {
										"canonicalName": "Ballot.Voter",
										"name": "Voter",
										"scope": 242,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"constant": false,
												"name": "weight",
												"scope": 10,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "uint256",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "uint",
														"type": "uint256"
													},
													"id": 2,
													"name": "ElementaryTypeName",
													"src": "107:4:0"
												}
											],
											"id": 3,
											"name": "VariableDeclaration",
											"src": "107:11:0"
										},
										{
											"attributes": {
												"constant": false,
												"name": "voted",
												"scope": 10,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "bool",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "bool",
														"type": "bool"
													},
													"id": 4,
													"name": "ElementaryTypeName",
													"src": "129:4:0"
												}
											],
											"id": 5,
											"name": "VariableDeclaration",
											"src": "129:10:0"
										},
										{
											"attributes": {
												"constant": false,
												"name": "vote",
												"scope": 10,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "uint8",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "uint8",
														"type": "uint8"
													},
													"id": 6,
													"name": "ElementaryTypeName",
													"src": "150:5:0"
												}
											],
											"id": 7,
											"name": "VariableDeclaration",
											"src": "150:10:0"
										},
										{
											"attributes": {
												"constant": false,
												"name": "delegate",
												"scope": 10,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "address",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 8,
													"name": "ElementaryTypeName",
													"src": "171:7:0"
												}
											],
											"id": 9,
											"name": "VariableDeclaration",
											"src": "171:16:0"
										}
									],
									"id": 10,
									"name": "StructDefinition",
									"src": "83:112:0"
								},
								{
									"attributes": {
										"canonicalName": "Ballot.Proposal",
										"name": "Proposal",
										"scope": 242,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"constant": false,
												"name": "voteCount",
												"scope": 13,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "uint256",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "uint",
														"type": "uint256"
													},
													"id": 11,
													"name": "ElementaryTypeName",
													"src": "228:4:0"
												}
											],
											"id": 12,
											"name": "VariableDeclaration",
											"src": "228:14:0"
										}
									],
									"id": 13,
									"name": "StructDefinition",
									"src": "201:49:0"
								},
								{
									"attributes": {
										"canonicalName": "Ballot.Stage",
										"name": "Stage"
									},
									"children": [
										{
											"attributes": {
												"name": "Init"
											},
											"id": 14,
											"name": "EnumValue",
											"src": "268:4:0"
										},
										{
											"attributes": {
												"name": "Reg"
											},
											"id": 15,
											"name": "EnumValue",
											"src": "273:3:0"
										},
										{
											"attributes": {
												"name": "Vote"
											},
											"id": 16,
											"name": "EnumValue",
											"src": "278:4:0"
										},
										{
											"attributes": {
												"name": "Done"
											},
											"id": 17,
											"name": "EnumValue",
											"src": "284:4:0"
										}
									],
									"id": 18,
									"name": "EnumDefinition",
									"src": "256:33:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "stage",
										"scope": 242,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "enum Ballot.Stage",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Stage",
												"referencedDeclaration": 18,
												"type": "enum Ballot.Stage"
											},
											"id": 19,
											"name": "UserDefinedTypeName",
											"src": "295:5:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"member_name": "Init",
												"referencedDeclaration": null,
												"type": "enum Ballot.Stage"
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 18,
														"type": "type(enum Ballot.Stage)",
														"value": "Stage"
													},
													"id": 20,
													"name": "Identifier",
													"src": "316:5:0"
												}
											],
											"id": 21,
											"name": "MemberAccess",
											"src": "316:10:0"
										}
									],
									"id": 22,
									"name": "VariableDeclaration",
									"src": "295:31:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "chairperson",
										"scope": 242,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 23,
											"name": "ElementaryTypeName",
											"src": "339:7:0"
										}
									],
									"id": 24,
									"name": "VariableDeclaration",
									"src": "339:19:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "voters",
										"scope": 242,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => struct Ballot.Voter storage ref)",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => struct Ballot.Voter storage ref)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 25,
													"name": "ElementaryTypeName",
													"src": "373:7:0"
												},
												{
													"attributes": {
														"contractScope": null,
														"name": "Voter",
														"referencedDeclaration": 10,
														"type": "struct Ballot.Voter storage pointer"
													},
													"id": 26,
													"name": "UserDefinedTypeName",
													"src": "384:5:0"
												}
											],
											"id": 27,
											"name": "Mapping",
											"src": "365:25:0"
										}
									],
									"id": 28,
									"name": "VariableDeclaration",
									"src": "365:32:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "proposals",
										"scope": 242,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "struct Ballot.Proposal storage ref[] storage ref",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"length": null,
												"type": "struct Ballot.Proposal storage ref[] storage pointer"
											},
											"children": [
												{
													"attributes": {
														"contractScope": null,
														"name": "Proposal",
														"referencedDeclaration": 13,
														"type": "struct Ballot.Proposal storage pointer"
													},
													"id": 29,
													"name": "UserDefinedTypeName",
													"src": "404:8:0"
												}
											],
											"id": 30,
											"name": "ArrayTypeName",
											"src": "404:10:0"
										}
									],
									"id": 31,
									"name": "VariableDeclaration",
									"src": "404:20:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "votingCompleted"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 32,
											"name": "ParameterList",
											"src": "454:2:0"
										}
									],
									"id": 33,
									"name": "EventDefinition",
									"src": "433:24:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "startTime",
										"scope": 242,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 34,
											"name": "ElementaryTypeName",
											"src": "469:4:0"
										}
									],
									"id": 35,
									"name": "VariableDeclaration",
									"src": "469:14:0"
								},
								{
									"attributes": {
										"name": "validStage",
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "reqStage",
														"scope": 47,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "enum Ballot.Stage",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"contractScope": null,
																"name": "Stage",
																"referencedDeclaration": 18,
																"type": "enum Ballot.Stage"
															},
															"id": 36,
															"name": "UserDefinedTypeName",
															"src": "526:5:0"
														}
													],
													"id": 37,
													"name": "VariableDeclaration",
													"src": "526:14:0"
												}
											],
											"id": 38,
											"name": "ParameterList",
											"src": "525:16:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 263,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 39,
																	"name": "Identifier",
																	"src": "549:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_enum$_Stage_$18",
																			"typeString": "enum Ballot.Stage"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 22,
																				"type": "enum Ballot.Stage",
																				"value": "stage"
																			},
																			"id": 40,
																			"name": "Identifier",
																			"src": "557:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 37,
																				"type": "enum Ballot.Stage",
																				"value": "reqStage"
																			},
																			"id": 41,
																			"name": "Identifier",
																			"src": "566:8:0"
																		}
																	],
																	"id": 42,
																	"name": "BinaryOperation",
																	"src": "557:17:0"
																}
															],
															"id": 43,
															"name": "FunctionCall",
															"src": "549:26:0"
														}
													],
													"id": 44,
													"name": "ExpressionStatement",
													"src": "549:26:0"
												},
												{
													"id": 45,
													"name": "PlaceholderStatement",
													"src": "584:1:0"
												}
											],
											"id": 46,
											"name": "Block",
											"src": "547:46:0"
										}
									],
									"id": 47,
									"name": "ModifierDefinition",
									"src": "506:87:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "Ballot",
										"payable": false,
										"scope": 242,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_numProposals",
														"scope": 80,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint8",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint8",
																"type": "uint8"
															},
															"id": 48,
															"name": "ElementaryTypeName",
															"src": "691:5:0"
														}
													],
													"id": 49,
													"name": "VariableDeclaration",
													"src": "691:19:0"
												}
											],
											"id": 50,
											"name": "ParameterList",
											"src": "690:21:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 51,
											"name": "ParameterList",
											"src": "720:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 24,
																		"type": "address",
																		"value": "chairperson"
																	},
																	"id": 52,
																	"name": "Identifier",
																	"src": "731:11:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 245,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 53,
																			"name": "Identifier",
																			"src": "745:3:0"
																		}
																	],
																	"id": 54,
																	"name": "MemberAccess",
																	"src": "745:10:0"
																}
															],
															"id": 55,
															"name": "Assignment",
															"src": "731:24:0"
														}
													],
													"id": 56,
													"name": "ExpressionStatement",
													"src": "731:24:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"member_name": "weight",
																		"referencedDeclaration": 3,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "struct Ballot.Voter storage ref"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 28,
																						"type": "mapping(address => struct Ballot.Voter storage ref)",
																						"value": "voters"
																					},
																					"id": 57,
																					"name": "Identifier",
																					"src": "766:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 24,
																						"type": "address",
																						"value": "chairperson"
																					},
																					"id": 58,
																					"name": "Identifier",
																					"src": "773:11:0"
																				}
																			],
																			"id": 59,
																			"name": "IndexAccess",
																			"src": "766:19:0"
																		}
																	],
																	"id": 60,
																	"name": "MemberAccess",
																	"src": "766:26:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "32",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 2",
																		"value": "2"
																	},
																	"id": 61,
																	"name": "Literal",
																	"src": "795:1:0"
																}
															],
															"id": 62,
															"name": "Assignment",
															"src": "766:30:0"
														}
													],
													"id": 63,
													"name": "ExpressionStatement",
													"src": "766:30:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"member_name": "length",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 31,
																				"type": "struct Ballot.Proposal storage ref[] storage ref",
																				"value": "proposals"
																			},
																			"id": 64,
																			"name": "Identifier",
																			"src": "843:9:0"
																		}
																	],
																	"id": 66,
																	"name": "MemberAccess",
																	"src": "843:16:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 49,
																		"type": "uint8",
																		"value": "_numProposals"
																	},
																	"id": 67,
																	"name": "Identifier",
																	"src": "862:13:0"
																}
															],
															"id": 68,
															"name": "Assignment",
															"src": "843:32:0"
														}
													],
													"id": 69,
													"name": "ExpressionStatement",
													"src": "843:32:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "enum Ballot.Stage"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 22,
																		"type": "enum Ballot.Stage",
																		"value": "stage"
																	},
																	"id": 70,
																	"name": "Identifier",
																	"src": "886:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"member_name": "Reg",
																		"referencedDeclaration": null,
																		"type": "enum Ballot.Stage"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 18,
																				"type": "type(enum Ballot.Stage)",
																				"value": "Stage"
																			},
																			"id": 71,
																			"name": "Identifier",
																			"src": "894:5:0"
																		}
																	],
																	"id": 72,
																	"name": "MemberAccess",
																	"src": "894:9:0"
																}
															],
															"id": 73,
															"name": "Assignment",
															"src": "886:17:0"
														}
													],
													"id": 74,
													"name": "ExpressionStatement",
													"src": "886:17:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 35,
																		"type": "uint256",
																		"value": "startTime"
																	},
																	"id": 75,
																	"name": "Identifier",
																	"src": "914:9:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 247,
																		"type": "uint256",
																		"value": "now"
																	},
																	"id": 76,
																	"name": "Identifier",
																	"src": "926:3:0"
																}
															],
															"id": 77,
															"name": "Assignment",
															"src": "914:15:0"
														}
													],
													"id": 78,
													"name": "ExpressionStatement",
													"src": "914:15:0"
												}
											],
											"id": 79,
											"name": "Block",
											"src": "720:217:0"
										}
									],
									"id": 80,
									"name": "FunctionDefinition",
									"src": "675:262:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "register",
										"payable": false,
										"scope": 242,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "toVoter",
														"scope": 128,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 81,
															"name": "ElementaryTypeName",
															"src": "1069:7:0"
														}
													],
													"id": 82,
													"name": "VariableDeclaration",
													"src": "1069:15:0"
												}
											],
											"id": 83,
											"name": "ParameterList",
											"src": "1068:17:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 88,
											"name": "ParameterList",
											"src": "1115:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 47,
														"type": "modifier (enum Ballot.Stage)",
														"value": "validStage"
													},
													"id": 84,
													"name": "Identifier",
													"src": "1093:10:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"member_name": "Reg",
														"referencedDeclaration": null,
														"type": "enum Ballot.Stage"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 18,
																"type": "type(enum Ballot.Stage)",
																"value": "Stage"
															},
															"id": 85,
															"name": "Identifier",
															"src": "1104:5:0"
														}
													],
													"id": 86,
													"name": "MemberAccess",
													"src": "1104:9:0"
												}
											],
											"id": 87,
											"name": "ModifierInvocation",
											"src": "1093:21:0"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "||",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 245,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 89,
																					"name": "Identifier",
																					"src": "1175:3:0"
																				}
																			],
																			"id": 90,
																			"name": "MemberAccess",
																			"src": "1175:10:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 24,
																				"type": "address",
																				"value": "chairperson"
																			},
																			"id": 91,
																			"name": "Identifier",
																			"src": "1189:11:0"
																		}
																	],
																	"id": 92,
																	"name": "BinaryOperation",
																	"src": "1175:25:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "voted",
																		"referencedDeclaration": 5,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "struct Ballot.Voter storage ref"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 28,
																						"type": "mapping(address => struct Ballot.Voter storage ref)",
																						"value": "voters"
																					},
																					"id": 93,
																					"name": "Identifier",
																					"src": "1204:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 82,
																						"type": "address",
																						"value": "toVoter"
																					},
																					"id": 94,
																					"name": "Identifier",
																					"src": "1211:7:0"
																				}
																			],
																			"id": 95,
																			"name": "IndexAccess",
																			"src": "1204:15:0"
																		}
																	],
																	"id": 96,
																	"name": "MemberAccess",
																	"src": "1204:21:0"
																}
															],
															"id": 97,
															"name": "BinaryOperation",
															"src": "1175:50:0"
														},
														{
															"attributes": {
																"expression": null,
																"functionReturnParameters": 88
															},
															"id": 98,
															"name": "Return",
															"src": "1227:7:0"
														}
													],
													"id": 99,
													"name": "IfStatement",
													"src": "1171:63:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"member_name": "weight",
																		"referencedDeclaration": 3,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "struct Ballot.Voter storage ref"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 28,
																						"type": "mapping(address => struct Ballot.Voter storage ref)",
																						"value": "voters"
																					},
																					"id": 100,
																					"name": "Identifier",
																					"src": "1244:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 82,
																						"type": "address",
																						"value": "toVoter"
																					},
																					"id": 101,
																					"name": "Identifier",
																					"src": "1251:7:0"
																				}
																			],
																			"id": 102,
																			"name": "IndexAccess",
																			"src": "1244:15:0"
																		}
																	],
																	"id": 103,
																	"name": "MemberAccess",
																	"src": "1244:22:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "31",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 1",
																		"value": "1"
																	},
																	"id": 104,
																	"name": "Literal",
																	"src": "1269:1:0"
																}
															],
															"id": 105,
															"name": "Assignment",
															"src": "1244:26:0"
														}
													],
													"id": 106,
													"name": "ExpressionStatement",
													"src": "1244:26:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"member_name": "voted",
																		"referencedDeclaration": 5,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "struct Ballot.Voter storage ref"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 28,
																						"type": "mapping(address => struct Ballot.Voter storage ref)",
																						"value": "voters"
																					},
																					"id": 107,
																					"name": "Identifier",
																					"src": "1281:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 82,
																						"type": "address",
																						"value": "toVoter"
																					},
																					"id": 108,
																					"name": "Identifier",
																					"src": "1288:7:0"
																				}
																			],
																			"id": 109,
																			"name": "IndexAccess",
																			"src": "1281:15:0"
																		}
																	],
																	"id": 110,
																	"name": "MemberAccess",
																	"src": "1281:21:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 111,
																	"name": "Literal",
																	"src": "1305:5:0"
																}
															],
															"id": 112,
															"name": "Assignment",
															"src": "1281:29:0"
														}
													],
													"id": 113,
													"name": "ExpressionStatement",
													"src": "1281:29:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 247,
																		"type": "uint256",
																		"value": "now"
																	},
																	"id": 114,
																	"name": "Identifier",
																	"src": "1325:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "+",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 35,
																						"type": "uint256",
																						"value": "startTime"
																					},
																					"id": 115,
																					"name": "Identifier",
																					"src": "1332:9:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "3330",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": "seconds",
																						"token": "number",
																						"type": "int_const 30",
																						"value": "30"
																					},
																					"id": 116,
																					"name": "Literal",
																					"src": "1343:10:0"
																				}
																			],
																			"id": 117,
																			"name": "BinaryOperation",
																			"src": "1332:21:0"
																		}
																	],
																	"id": 118,
																	"name": "TupleExpression",
																	"src": "1331:23:0"
																}
															],
															"id": 119,
															"name": "BinaryOperation",
															"src": "1325:29:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "enum Ballot.Stage"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 22,
																						"type": "enum Ballot.Stage",
																						"value": "stage"
																					},
																					"id": 120,
																					"name": "Identifier",
																					"src": "1357:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"member_name": "Vote",
																						"referencedDeclaration": null,
																						"type": "enum Ballot.Stage"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 18,
																								"type": "type(enum Ballot.Stage)",
																								"value": "Stage"
																							},
																							"id": 121,
																							"name": "Identifier",
																							"src": "1365:5:0"
																						}
																					],
																					"id": 122,
																					"name": "MemberAccess",
																					"src": "1365:10:0"
																				}
																			],
																			"id": 123,
																			"name": "Assignment",
																			"src": "1357:18:0"
																		}
																	],
																	"id": 124,
																	"name": "ExpressionStatement",
																	"src": "1357:18:0"
																}
															],
															"id": 125,
															"name": "Block",
															"src": "1356:22:0"
														}
													],
													"id": 126,
													"name": "IfStatement",
													"src": "1321:57:0"
												}
											],
											"id": 127,
											"name": "Block",
											"src": "1115:278:0"
										}
									],
									"id": 128,
									"name": "FunctionDefinition",
									"src": "1051:342:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "vote",
										"payable": false,
										"scope": 242,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "toProposal",
														"scope": 190,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint8",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint8",
																"type": "uint8"
															},
															"id": 129,
															"name": "ElementaryTypeName",
															"src": "1470:5:0"
														}
													],
													"id": 130,
													"name": "VariableDeclaration",
													"src": "1470:16:0"
												}
											],
											"id": 131,
											"name": "ParameterList",
											"src": "1469:18:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 136,
											"name": "ParameterList",
											"src": "1519:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 47,
														"type": "modifier (enum Ballot.Stage)",
														"value": "validStage"
													},
													"id": 132,
													"name": "Identifier",
													"src": "1495:10:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"member_name": "Vote",
														"referencedDeclaration": null,
														"type": "enum Ballot.Stage"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 18,
																"type": "type(enum Ballot.Stage)",
																"value": "Stage"
															},
															"id": 133,
															"name": "Identifier",
															"src": "1506:5:0"
														}
													],
													"id": 134,
													"name": "MemberAccess",
													"src": "1506:10:0"
												}
											],
											"id": 135,
											"name": "ModifierInvocation",
											"src": "1495:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															138
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "sender",
																"scope": 190,
																"stateVariable": false,
																"storageLocation": "storage",
																"type": "struct Ballot.Voter storage pointer",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"contractScope": null,
																		"name": "Voter",
																		"referencedDeclaration": 10,
																		"type": "struct Ballot.Voter storage pointer"
																	},
																	"id": 137,
																	"name": "UserDefinedTypeName",
																	"src": "1576:5:0"
																}
															],
															"id": 138,
															"name": "VariableDeclaration",
															"src": "1576:20:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "struct Ballot.Voter storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 28,
																		"type": "mapping(address => struct Ballot.Voter storage ref)",
																		"value": "voters"
																	},
																	"id": 139,
																	"name": "Identifier",
																	"src": "1599:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 245,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 140,
																			"name": "Identifier",
																			"src": "1606:3:0"
																		}
																	],
																	"id": 141,
																	"name": "MemberAccess",
																	"src": "1606:10:0"
																}
															],
															"id": 142,
															"name": "IndexAccess",
															"src": "1599:18:0"
														}
													],
													"id": 143,
													"name": "VariableDeclarationStatement",
													"src": "1576:41:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "||",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "voted",
																		"referencedDeclaration": 5,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 138,
																				"type": "struct Ballot.Voter storage pointer",
																				"value": "sender"
																			},
																			"id": 144,
																			"name": "Identifier",
																			"src": "1632:6:0"
																		}
																	],
																	"id": 145,
																	"name": "MemberAccess",
																	"src": "1632:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 130,
																				"type": "uint8",
																				"value": "toProposal"
																			},
																			"id": 146,
																			"name": "Identifier",
																			"src": "1648:10:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "length",
																				"referencedDeclaration": null,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 31,
																						"type": "struct Ballot.Proposal storage ref[] storage ref",
																						"value": "proposals"
																					},
																					"id": 147,
																					"name": "Identifier",
																					"src": "1662:9:0"
																				}
																			],
																			"id": 148,
																			"name": "MemberAccess",
																			"src": "1662:16:0"
																		}
																	],
																	"id": 149,
																	"name": "BinaryOperation",
																	"src": "1648:30:0"
																}
															],
															"id": 150,
															"name": "BinaryOperation",
															"src": "1632:46:0"
														},
														{
															"attributes": {
																"expression": null,
																"functionReturnParameters": 136
															},
															"id": 151,
															"name": "Return",
															"src": "1680:7:0"
														}
													],
													"id": 152,
													"name": "IfStatement",
													"src": "1628:59:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"member_name": "voted",
																		"referencedDeclaration": 5,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 138,
																				"type": "struct Ballot.Voter storage pointer",
																				"value": "sender"
																			},
																			"id": 153,
																			"name": "Identifier",
																			"src": "1697:6:0"
																		}
																	],
																	"id": 155,
																	"name": "MemberAccess",
																	"src": "1697:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 156,
																	"name": "Literal",
																	"src": "1712:4:0"
																}
															],
															"id": 157,
															"name": "Assignment",
															"src": "1697:19:0"
														}
													],
													"id": 158,
													"name": "ExpressionStatement",
													"src": "1697:19:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint8"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"member_name": "vote",
																		"referencedDeclaration": 7,
																		"type": "uint8"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 138,
																				"type": "struct Ballot.Voter storage pointer",
																				"value": "sender"
																			},
																			"id": 159,
																			"name": "Identifier",
																			"src": "1727:6:0"
																		}
																	],
																	"id": 161,
																	"name": "MemberAccess",
																	"src": "1727:11:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 130,
																		"type": "uint8",
																		"value": "toProposal"
																	},
																	"id": 162,
																	"name": "Identifier",
																	"src": "1741:10:0"
																}
															],
															"id": 163,
															"name": "Assignment",
															"src": "1727:24:0"
														}
													],
													"id": 164,
													"name": "ExpressionStatement",
													"src": "1727:24:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"member_name": "voteCount",
																		"referencedDeclaration": 12,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "struct Ballot.Proposal storage ref"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 31,
																						"type": "struct Ballot.Proposal storage ref[] storage ref",
																						"value": "proposals"
																					},
																					"id": 165,
																					"name": "Identifier",
																					"src": "1765:9:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 130,
																						"type": "uint8",
																						"value": "toProposal"
																					},
																					"id": 166,
																					"name": "Identifier",
																					"src": "1775:10:0"
																				}
																			],
																			"id": 167,
																			"name": "IndexAccess",
																			"src": "1765:21:0"
																		}
																	],
																	"id": 168,
																	"name": "MemberAccess",
																	"src": "1765:31:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "weight",
																		"referencedDeclaration": 3,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 138,
																				"type": "struct Ballot.Voter storage pointer",
																				"value": "sender"
																			},
																			"id": 169,
																			"name": "Identifier",
																			"src": "1800:6:0"
																		}
																	],
																	"id": 170,
																	"name": "MemberAccess",
																	"src": "1800:13:0"
																}
															],
															"id": 171,
															"name": "Assignment",
															"src": "1765:48:0"
														}
													],
													"id": 172,
													"name": "ExpressionStatement",
													"src": "1765:48:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 247,
																		"type": "uint256",
																		"value": "now"
																	},
																	"id": 173,
																	"name": "Identifier",
																	"src": "1828:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "+",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 35,
																						"type": "uint256",
																						"value": "startTime"
																					},
																					"id": 174,
																					"name": "Identifier",
																					"src": "1835:9:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "3330",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": "seconds",
																						"token": "number",
																						"type": "int_const 30",
																						"value": "30"
																					},
																					"id": 175,
																					"name": "Literal",
																					"src": "1846:10:0"
																				}
																			],
																			"id": 176,
																			"name": "BinaryOperation",
																			"src": "1835:21:0"
																		}
																	],
																	"id": 177,
																	"name": "TupleExpression",
																	"src": "1834:23:0"
																}
															],
															"id": 178,
															"name": "BinaryOperation",
															"src": "1828:29:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "enum Ballot.Stage"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 22,
																						"type": "enum Ballot.Stage",
																						"value": "stage"
																					},
																					"id": 179,
																					"name": "Identifier",
																					"src": "1860:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"member_name": "Done",
																						"referencedDeclaration": null,
																						"type": "enum Ballot.Stage"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 18,
																								"type": "type(enum Ballot.Stage)",
																								"value": "Stage"
																							},
																							"id": 180,
																							"name": "Identifier",
																							"src": "1868:5:0"
																						}
																					],
																					"id": 181,
																					"name": "MemberAccess",
																					"src": "1868:10:0"
																				}
																			],
																			"id": 182,
																			"name": "Assignment",
																			"src": "1860:18:0"
																		}
																	],
																	"id": 183,
																	"name": "ExpressionStatement",
																	"src": "1860:18:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"arguments": [
																					null
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							null
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 33,
																						"type": "function ()",
																						"value": "votingCompleted"
																					},
																					"id": 184,
																					"name": "Identifier",
																					"src": "1880:15:0"
																				}
																			],
																			"id": 185,
																			"name": "FunctionCall",
																			"src": "1880:17:0"
																		}
																	],
																	"id": 186,
																	"name": "ExpressionStatement",
																	"src": "1880:17:0"
																}
															],
															"id": 187,
															"name": "Block",
															"src": "1859:40:0"
														}
													],
													"id": 188,
													"name": "IfStatement",
													"src": "1824:75:0"
												}
											],
											"id": 189,
											"name": "Block",
											"src": "1519:405:0"
										}
									],
									"id": 190,
									"name": "FunctionDefinition",
									"src": "1456:468:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"name": "winningProposal",
										"payable": false,
										"scope": 242,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 191,
											"name": "ParameterList",
											"src": "1956:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_winningProposal",
														"scope": 241,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint8",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint8",
																"type": "uint8"
															},
															"id": 196,
															"name": "ElementaryTypeName",
															"src": "2007:5:0"
														}
													],
													"id": 197,
													"name": "VariableDeclaration",
													"src": "2007:22:0"
												}
											],
											"id": 198,
											"name": "ParameterList",
											"src": "2006:24:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 47,
														"type": "modifier (enum Ballot.Stage)",
														"value": "validStage"
													},
													"id": 192,
													"name": "Identifier",
													"src": "1966:10:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"member_name": "Done",
														"referencedDeclaration": null,
														"type": "enum Ballot.Stage"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 18,
																"type": "type(enum Ballot.Stage)",
																"value": "Stage"
															},
															"id": 193,
															"name": "Identifier",
															"src": "1977:5:0"
														}
													],
													"id": 194,
													"name": "MemberAccess",
													"src": "1977:10:0"
												}
											],
											"id": 195,
											"name": "ModifierInvocation",
											"src": "1966:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															200
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "winningVoteCount",
																"scope": 241,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 199,
																	"name": "ElementaryTypeName",
																	"src": "2086:7:0"
																}
															],
															"id": 200,
															"name": "VariableDeclaration",
															"src": "2086:24:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "30",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 0",
																"value": "0"
															},
															"id": 201,
															"name": "Literal",
															"src": "2113:1:0"
														}
													],
													"id": 202,
													"name": "VariableDeclarationStatement",
													"src": "2086:28:0"
												},
												{
													"children": [
														{
															"attributes": {
																"assignments": [
																	204
																]
															},
															"children": [
																{
																	"attributes": {
																		"constant": false,
																		"name": "prop",
																		"scope": 241,
																		"stateVariable": false,
																		"storageLocation": "default",
																		"type": "uint8",
																		"value": null,
																		"visibility": "internal"
																	},
																	"children": [
																		{
																			"attributes": {
																				"name": "uint8",
																				"type": "uint8"
																			},
																			"id": 203,
																			"name": "ElementaryTypeName",
																			"src": "2130:5:0"
																		}
																	],
																	"id": 204,
																	"name": "VariableDeclaration",
																	"src": "2130:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 205,
																	"name": "Literal",
																	"src": "2143:1:0"
																}
															],
															"id": 206,
															"name": "VariableDeclarationStatement",
															"src": "2130:14:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "<",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 204,
																		"type": "uint8",
																		"value": "prop"
																	},
																	"id": 207,
																	"name": "Identifier",
																	"src": "2146:4:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "length",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 31,
																				"type": "struct Ballot.Proposal storage ref[] storage ref",
																				"value": "proposals"
																			},
																			"id": 208,
																			"name": "Identifier",
																			"src": "2153:9:0"
																		}
																	],
																	"id": 209,
																	"name": "MemberAccess",
																	"src": "2153:16:0"
																}
															],
															"id": 210,
															"name": "BinaryOperation",
															"src": "2146:23:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "++",
																		"prefix": false,
																		"type": "uint8"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 204,
																				"type": "uint8",
																				"value": "prop"
																			},
																			"id": 211,
																			"name": "Identifier",
																			"src": "2171:4:0"
																		}
																	],
																	"id": 212,
																	"name": "UnaryOperation",
																	"src": "2171:6:0"
																}
															],
															"id": 213,
															"name": "ExpressionStatement",
															"src": "2171:6:0"
														},
														{
															"attributes": {
																"falseBody": null
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "voteCount",
																				"referencedDeclaration": 12,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "struct Ballot.Proposal storage ref"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 31,
																								"type": "struct Ballot.Proposal storage ref[] storage ref",
																								"value": "proposals"
																							},
																							"id": 214,
																							"name": "Identifier",
																							"src": "2196:9:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 204,
																								"type": "uint8",
																								"value": "prop"
																							},
																							"id": 215,
																							"name": "Identifier",
																							"src": "2206:4:0"
																						}
																					],
																					"id": 216,
																					"name": "IndexAccess",
																					"src": "2196:15:0"
																				}
																			],
																			"id": 217,
																			"name": "MemberAccess",
																			"src": "2196:25:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 200,
																				"type": "uint256",
																				"value": "winningVoteCount"
																			},
																			"id": 218,
																			"name": "Identifier",
																			"src": "2224:16:0"
																		}
																	],
																	"id": 219,
																	"name": "BinaryOperation",
																	"src": "2196:44:0"
																},
																{
																	"children": [
																		{
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "=",
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 200,
																								"type": "uint256",
																								"value": "winningVoteCount"
																							},
																							"id": 220,
																							"name": "Identifier",
																							"src": "2261:16:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "voteCount",
																								"referencedDeclaration": 12,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"type": "struct Ballot.Proposal storage ref"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 31,
																												"type": "struct Ballot.Proposal storage ref[] storage ref",
																												"value": "proposals"
																											},
																											"id": 221,
																											"name": "Identifier",
																											"src": "2280:9:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 204,
																												"type": "uint8",
																												"value": "prop"
																											},
																											"id": 222,
																											"name": "Identifier",
																											"src": "2290:4:0"
																										}
																									],
																									"id": 223,
																									"name": "IndexAccess",
																									"src": "2280:15:0"
																								}
																							],
																							"id": 224,
																							"name": "MemberAccess",
																							"src": "2280:25:0"
																						}
																					],
																					"id": 225,
																					"name": "Assignment",
																					"src": "2261:44:0"
																				}
																			],
																			"id": 226,
																			"name": "ExpressionStatement",
																			"src": "2261:44:0"
																		},
																		{
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "=",
																						"type": "uint8"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 197,
																								"type": "uint8",
																								"value": "_winningProposal"
																							},
																							"id": 227,
																							"name": "Identifier",
																							"src": "2324:16:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 204,
																								"type": "uint8",
																								"value": "prop"
																							},
																							"id": 228,
																							"name": "Identifier",
																							"src": "2343:4:0"
																						}
																					],
																					"id": 229,
																					"name": "Assignment",
																					"src": "2324:23:0"
																				}
																			],
																			"id": 230,
																			"name": "ExpressionStatement",
																			"src": "2324:23:0"
																		}
																	],
																	"id": 231,
																	"name": "Block",
																	"src": "2242:121:0"
																}
															],
															"id": 232,
															"name": "IfStatement",
															"src": "2192:171:0"
														}
													],
													"id": 233,
													"name": "ForStatement",
													"src": "2125:238:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 262,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 234,
																	"name": "Identifier",
																	"src": "2372:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 200,
																				"type": "uint256",
																				"value": "winningVoteCount"
																			},
																			"id": 235,
																			"name": "Identifier",
																			"src": "2380:16:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 236,
																			"name": "Literal",
																			"src": "2399:1:0"
																		}
																	],
																	"id": 237,
																	"name": "BinaryOperation",
																	"src": "2380:20:0"
																}
															],
															"id": 238,
															"name": "FunctionCall",
															"src": "2372:29:0"
														}
													],
													"id": 239,
													"name": "ExpressionStatement",
													"src": "2372:29:0"
												}
											],
											"id": 240,
											"name": "Block",
											"src": "2031:380:0"
										}
									],
									"id": 241,
									"name": "FunctionDefinition",
									"src": "1932:479:0"
								}
							],
							"id": 242,
							"name": "ContractDefinition",
							"src": "58:2356:0"
						}
					],
					"id": 243,
					"name": "SourceUnit",
					"src": "33:2389:0"
				}
			}
		}
	}
}